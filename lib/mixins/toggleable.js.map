{"version":3,"sources":["../../src/mixins/toggleable.ts"],"names":[],"mappings":";;AAAA,OAAO,GAAP,MAAoC,KAApC;AAMA,OAAM,SAAU,OAAV,GAAkD;AAAA;;AAAA,QAA/B,IAA+B,uEAAxB,OAAwB;AAAA,QAAf,KAAe,uEAAP,OAAO;;AACtD,WAAO,IAAI,MAAJ,CAAW;AAChB,cAAM,YADU;AAGhB,eAAO,EAAE,UAAF,EAAQ,YAAR,EAHS;AAKhB,mCACG,IADH,EACU,EAAE,UAAU,KAAZ,EADV,CALgB;AAShB,YATgB,kBASZ;AACF,mBAAO;AACL,0BAAU,CAAC,CAAC,KAAK,IAAL;AADP,aAAP;AAGD,SAbe;;AAehB,qDACG,IADH,YACU,GADV,EACa;AACT,iBAAK,QAAL,GAAgB,CAAC,CAAC,GAAlB;AACD,SAHH,yDAIY,GAJZ,EAIe;AACX,aAAC,CAAC,GAAF,KAAU,KAAK,IAAL,CAAV,IAAwB,KAAK,KAAL,CAAW,KAAX,EAAkB,GAAlB,CAAxB;AACD,SANH;AAfgB,KAAX,CAAP;AAwBD;AAED;AACA,IAAM,aAAa,SAAnB;AAEA,eAAe,UAAf","sourcesContent":["import Vue, { VueConstructor } from 'vue'\r\n\r\n/* eslint-disable-next-line no-use-before-define */\r\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\r\n\r\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\r\nexport function factory (prop = 'value', event = 'input') {\r\n  return Vue.extend({\r\n    name: 'toggleable',\r\n\r\n    model: { prop, event },\r\n\r\n    props: {\r\n      [prop]: { required: false }\r\n    },\r\n\r\n    data () {\r\n      return {\r\n        isActive: !!this[prop]\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      [prop] (val) {\r\n        this.isActive = !!val\r\n      },\r\n      isActive (val) {\r\n        !!val !== this[prop] && this.$emit(event, val)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/* eslint-disable-next-line no-redeclare */\r\nconst Toggleable = factory()\r\n\r\nexport default Toggleable\r\n"],"sourceRoot":""}