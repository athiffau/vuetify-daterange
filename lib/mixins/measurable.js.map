{"version":3,"sources":["../../src/mixins/measurable.ts"],"names":[],"mappings":";AACA,SAAS,aAAT,QAA8B,iBAA9B;AAEA;AACA,OAAO,GAAP,MAAgB,KAAhB;AAKA,eAAe,IAAI,MAAJ,CAAW;AACxB,UAAM,YADkB;AAGxB,WAAO;AACL,gBAAQ,CAAC,MAAD,EAAS,MAAT,CADH;AAEL,mBAAW,CAAC,MAAD,EAAS,MAAT,CAFN;AAGL,kBAAU,CAAC,MAAD,EAAS,MAAT,CAHL;AAIL,mBAAW,CAAC,MAAD,EAAS,MAAT,CAJN;AAKL,kBAAU,CAAC,MAAD,EAAS,MAAT,CALL;AAML,eAAO,CAAC,MAAD,EAAS,MAAT;AANF,KAHiB;AAYxB,cAAU;AACR,wBADQ,8BACQ;AACd,gBAAM,SAAiC,EAAvC;AAEA,gBAAM,SAAS,cAAc,KAAK,MAAnB,CAAf;AACA,gBAAM,YAAY,cAAc,KAAK,SAAnB,CAAlB;AACA,gBAAM,WAAW,cAAc,KAAK,QAAnB,CAAjB;AACA,gBAAM,YAAY,cAAc,KAAK,SAAnB,CAAlB;AACA,gBAAM,WAAW,cAAc,KAAK,QAAnB,CAAjB;AACA,gBAAM,QAAQ,cAAc,KAAK,KAAnB,CAAd;AAEA,gBAAI,MAAJ,EAAY,OAAO,MAAP,GAAgB,MAAhB;AACZ,gBAAI,SAAJ,EAAe,OAAO,SAAP,GAAmB,SAAnB;AACf,gBAAI,QAAJ,EAAc,OAAO,QAAP,GAAkB,QAAlB;AACd,gBAAI,SAAJ,EAAe,OAAO,SAAP,GAAmB,SAAnB;AACf,gBAAI,QAAJ,EAAc,OAAO,QAAP,GAAkB,QAAlB;AACd,gBAAI,KAAJ,EAAW,OAAO,KAAP,GAAe,KAAf;AAEX,mBAAO,MAAP;AACD;AAnBO;AAZc,CAAX,CAAf","sourcesContent":["// Helpers\r\nimport { convertToUnit } from '../util/helpers'\r\n\r\n// Types\r\nimport Vue from 'vue'\r\nimport { PropValidator } from 'vue/types/options'\r\n\r\nexport type NumberOrNumberString = PropValidator<string | number | undefined>\r\n\r\nexport default Vue.extend({\r\n  name: 'measurable',\r\n\r\n  props: {\r\n    height: [Number, String] as NumberOrNumberString,\r\n    maxHeight: [Number, String] as NumberOrNumberString,\r\n    maxWidth: [Number, String] as NumberOrNumberString,\r\n    minHeight: [Number, String] as NumberOrNumberString,\r\n    minWidth: [Number, String] as NumberOrNumberString,\r\n    width: [Number, String] as NumberOrNumberString\r\n  },\r\n\r\n  computed: {\r\n    measurableStyles (): object {\r\n      const styles: Record<string, string> = {}\r\n\r\n      const height = convertToUnit(this.height)\r\n      const minHeight = convertToUnit(this.minHeight)\r\n      const minWidth = convertToUnit(this.minWidth)\r\n      const maxHeight = convertToUnit(this.maxHeight)\r\n      const maxWidth = convertToUnit(this.maxWidth)\r\n      const width = convertToUnit(this.width)\r\n\r\n      if (height) styles.height = height\r\n      if (minHeight) styles.minHeight = minHeight\r\n      if (minWidth) styles.minWidth = minWidth\r\n      if (maxHeight) styles.maxHeight = maxHeight\r\n      if (maxWidth) styles.maxWidth = maxWidth\r\n      if (width) styles.width = width\r\n\r\n      return styles\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}