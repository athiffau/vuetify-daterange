{"version":3,"sources":["../../src/mixins/bootable.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAA2B,KAA3B;AAMA;;;;;;;;AAQA;AACA,eAAe,IAAI,MAAJ,GAA+B,MAA/B,CAAsC;AACnD,UAAM,UAD6C;AAGnD,WAAO;AACL,cAAM;AADD,KAH4C;AAOnD,UAAM;AAAA,eAAO;AACX,sBAAU;AADC,SAAP;AAAA,KAP6C;AAWnD,cAAU;AACR,kBADQ,wBACE;AACR,mBAAO,KAAK,QAAL,IAAiB,CAAC,KAAK,IAAvB,IAA+B,KAAK,QAA3C;AACD;AAHO,KAXyC;AAiBnD,WAAO;AACL,gBADK,sBACG;AACN,iBAAK,QAAL,GAAgB,IAAhB;AACD;AAHI,KAjB4C;AAuBnD,aAAS;AACP,uBADO,2BACU,OADV,EAC2B;AAChC,mBAAO,KAAK,UAAL,GAAkB,OAAlB,GAA4B,SAAnC;AACD;AAHM;AAvB0C,CAAtC,CAAf","sourcesContent":["import Vue, { VNode } from 'vue'\r\n\r\ninterface Toggleable extends Vue {\r\n  isActive?: boolean\r\n}\r\n\r\n/**\r\n * Bootable\r\n * @mixin\r\n *\r\n * Used to add lazy content functionality to components\r\n * Looks for change in \"isActive\" to automatically boot\r\n * Otherwise can be set manually\r\n */\r\n/* @vue/component */\r\nexport default Vue.extend<Vue & Toggleable>().extend({\r\n  name: 'bootable',\r\n\r\n  props: {\r\n    lazy: Boolean\r\n  },\r\n\r\n  data: () => ({\r\n    isBooted: false\r\n  }),\r\n\r\n  computed: {\r\n    hasContent (): boolean | undefined {\r\n      return this.isBooted || !this.lazy || this.isActive\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    isActive () {\r\n      this.isBooted = true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    showLazyContent (content?: VNode[]): VNode[] | undefined {\r\n      return this.hasContent ? content : undefined\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}