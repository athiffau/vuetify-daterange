{"version":3,"sources":["../../src/util/component.ts"],"names":[],"mappings":"eAkBc,SAAU,SAAV,CAAwB,OAAxB,EAAkC;AAC9C,WAAO,OAAP;AACD","sourcesContent":["/* eslint-disable max-len, import/export */\r\nimport {\r\n  ComponentOptions,\r\n  RecordPropsDefinition,\r\n  ThisTypedComponentOptionsWithArrayProps,\r\n  ThisTypedComponentOptionsWithRecordProps\r\n} from 'vue/types/options'\r\nimport { Vue } from 'vue/types/vue'\r\nimport { FunctionalComponentOptions } from 'vue'\r\n\r\ntype V = Vue\r\n\r\n// Maybe don't actually use this, it doesn't work very well\r\nexport default function component<Data, Methods, Computed, PropNames extends string = never> (options?: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>\r\nexport default function component<Data, Methods, Computed, Props> (options?: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>\r\nexport default function component<PropNames extends string = never> (definition: FunctionalComponentOptions<Record<PropNames, any>, PropNames[]>): FunctionalComponentOptions<Record<PropNames, any>, PropNames[]>\r\nexport default function component<Props> (definition: FunctionalComponentOptions<Props, RecordPropsDefinition<Props>>): FunctionalComponentOptions<Props, RecordPropsDefinition<Props>>\r\nexport default function component (options?: ComponentOptions<V>): ComponentOptions<V>\r\nexport default function component<T> (options: T): T {\r\n  return options\r\n}\r\n"],"sourceRoot":""}