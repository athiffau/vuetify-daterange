{"version":3,"sources":["../../../../src/components/VDatePicker/util/isDateInRange.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,CAAsB,OAAtB,EAAyF;AAAA,QAA3C,QAA2C,uEAAhC,CAAgC;AAAA,QAA7B,UAA6B,uEAAhB,CAAgB;AAAA,QAAb,SAAa,uEAAD,CAAC;;AACvF,QAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAM,KAAK,SAAS,QAAQ,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAT,CAAX;AACA,YAAM,MAAM,SAAS,QAAQ,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAT,CAAZ;AACA,YAAM,KAAK,SAAS,QAAQ,SAAR,CAAkB,CAAlB,EAAqB,EAArB,CAAT,CAAX;AAEA,YAAM,IAAI,IAAI,IAAJ,CAAS,EAAT,EAAa,MAAM,CAAnB,EAAsB,EAAtB,CAAV;AAEA,YAAI,OAAO,EAAE,QAAT,KAAsB,UAA1B,EAAsC;AACpC,cAAE,QAAF,CAAW,EAAE,QAAF,KAAe,UAA1B,EAAsC,EAAE,OAAF,KAAc,QAApD;AACA,cAAE,WAAF,CAAc,EAAE,WAAF,KAAkB,SAAhC;AAEA,mBAAO,CAAP;AACD;AACF;AAED,WAAO,IAAP;AACD;AAED,eAAc,SAAU,aAAV,CAAyB,IAAzB,EAAuC,KAAvC,EAAiD;AAC7D,QAAM,cAAc,YAAY,IAAZ,CAApB;AAEA,QAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,YAAI,OAAO,MAAM,CAAN,CAAP,KAAoB,QAApB,IAAgC,OAAO,MAAM,CAAN,CAAP,KAAoB,QAAxD,EAAkE;AAChE,gBAAM,YAAY,YAAY,MAAM,CAAN,CAAZ,CAAlB;AACA,gBAAM,UAAU,YAAY,MAAM,CAAN,CAAZ,CAAhB;AAEA,mBAAQ,aAAa,OAAb,IAAwB,WAAzB,GACH,UAAU,OAAV,MAAuB,YAAY,OAAZ,EAAvB,IAAgD,QAAQ,OAAR,MAAqB,YAAY,OAAZ,EADlE,GAEH,KAFJ;AAGD;AACF;AACD,WAAO,KAAP;AACD;AAED,OAAM,SAAU,qBAAV,CAAiC,OAAjC,EAAkD,SAAlD,EAAkE,YAAlE,EAAsF;AAC1F,QAAM,MAAM,YAAY,OAAZ,CAAZ;AACA,QAAM,OAAO,YAAY,SAAZ,CAAb;AACA,QAAM,OAAO,YAAY,YAAZ,CAAb;AAEA,WAAQ,QAAQ,IAAR,IAAgB,GAAjB,GACH,IAAI,OAAJ,MAAiB,KAAK,OAAL,EAAjB,IAAmC,IAAI,OAAJ,MAAiB,KAAK,OAAL,EAApD,IAAsE,KAAK,OAAL,KAAiB,KAAK,OAAL,EADpF,GAEH,KAFJ;AAGD","sourcesContent":["function dateFromStr (strDate: string | null, deltaDay = 0, deltaMonth = 0, deltaYear = 0) {\r\n  if (typeof strDate === 'string') {\r\n    const yr = parseInt(strDate.substring(0, 4))\r\n    const mon = parseInt(strDate.substring(5, 8))\r\n    const dt = parseInt(strDate.substring(8, 10))\r\n\r\n    const d = new Date(yr, mon - 1, dt)\r\n\r\n    if (typeof d.setMonth === 'function') {\r\n      d.setMonth(d.getMonth() + deltaMonth, d.getDate() + deltaDay)\r\n      d.setFullYear(d.getFullYear() + deltaYear)\r\n\r\n      return d\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default function isDateInRange (date: string, range: any): boolean {\r\n  const dateToCheck = dateFromStr(date)\r\n\r\n  if (Array.isArray(range)) {\r\n    if (typeof range[0] === 'string' && typeof range[1] === 'string') {\r\n      const startDate = dateFromStr(range[0])\r\n      const endDate = dateFromStr(range[1])\r\n\r\n      return (startDate && endDate && dateToCheck)\r\n        ? startDate.getTime() <= dateToCheck.getTime() && endDate.getTime() >= dateToCheck.getTime()\r\n        : false\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function isHoverAfterStartDate (btnDate: string, startDate: any, hoveringDate: string): boolean {\r\n  const _me = dateFromStr(btnDate)\r\n  const _std = dateFromStr(startDate)\r\n  const _htd = dateFromStr(hoveringDate)\r\n\r\n  return (_std && _htd && _me)\r\n    ? _me.getTime() >= _std.getTime() && _me.getTime() <= _htd.getTime() && _std.getTime() < _htd.getTime()\r\n    : false\r\n}\r\n"],"sourceRoot":""}