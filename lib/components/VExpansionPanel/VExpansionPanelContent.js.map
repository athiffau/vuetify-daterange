{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"names":[],"mappings":"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","sourcesContent":["import { VExpandTransition } from '../transitions'\r\n\r\nimport Bootable from '../../mixins/bootable'\r\nimport Toggleable from '../../mixins/toggleable'\r\nimport Rippleable from '../../mixins/rippleable'\r\nimport { Registrable, inject as RegistrableInject } from '../../mixins/registrable'\r\n\r\nimport VIcon from '../VIcon'\r\nimport VExpansionPanel from './VExpansionPanel'\r\n\r\nimport mixins, { ExtractVue } from '../../util/mixins'\r\nimport Vue, { VNode } from 'vue'\r\n\r\nimport { consoleWarn } from '../../util/console'\r\n\r\ntype VExpansionPanelInstance = InstanceType<typeof VExpansionPanel>\r\n\r\ninterface options extends Vue {\r\n  expansionPanel: VExpansionPanelInstance\r\n}\r\n\r\nexport default mixins<options &\r\n/* eslint-disable indent */\r\n  ExtractVue<[\r\n    typeof Bootable,\r\n    typeof Toggleable,\r\n    typeof Rippleable,\r\n    Registrable<'expansionPanel'>\r\n  ]>\r\n/* eslint-enable indent */\r\n>(\r\n  Bootable,\r\n  Toggleable,\r\n  Rippleable,\r\n  RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\r\n  /* @vue/component */\r\n).extend({\r\n  name: 'v-expansion-panel-content',\r\n\r\n  props: {\r\n    disabled: Boolean,\r\n    readonly: Boolean,\r\n    expandIcon: {\r\n      type: String,\r\n      default: '$vuetify.icons.expand'\r\n    },\r\n    hideActions: Boolean,\r\n    ripple: {\r\n      type: [Boolean, Object],\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data: () => ({\r\n    height: 'auto'\r\n  }),\r\n\r\n  computed: {\r\n    containerClasses (): object {\r\n      return {\r\n        'v-expansion-panel__container--active': this.isActive,\r\n        'v-expansion-panel__container--disabled': this.isDisabled\r\n      }\r\n    },\r\n    isDisabled (): boolean {\r\n      return this.expansionPanel.disabled || this.disabled\r\n    },\r\n    isReadonly (): boolean {\r\n      return this.expansionPanel.readonly || this.readonly\r\n    }\r\n  },\r\n\r\n  beforeMount () {\r\n    this.expansionPanel.register(this)\r\n\r\n    // Can be removed once fully deprecated\r\n    if (typeof this.value !== 'undefined') consoleWarn('v-model has been deprecated', this)\r\n  },\r\n\r\n  beforeDestroy () {\r\n    this.expansionPanel.unregister(this)\r\n  },\r\n\r\n  methods: {\r\n    onKeydown (e: KeyboardEvent) {\r\n      // Ensure element is the activeElement\r\n      if (\r\n        e.keyCode === 13 &&\r\n        this.$el === document.activeElement\r\n      ) this.expansionPanel.panelClick(this._uid)\r\n    },\r\n    onHeaderClick () {\r\n      this.isReadonly || this.expansionPanel.panelClick(this._uid)\r\n    },\r\n    genBody () {\r\n      return this.$createElement('div', {\r\n        ref: 'body',\r\n        class: 'v-expansion-panel__body',\r\n        directives: [{\r\n          name: 'show',\r\n          value: this.isActive\r\n        }]\r\n      }, this.showLazyContent(this.$slots.default))\r\n    },\r\n    genHeader () {\r\n      const children = [...(this.$slots.header || [])]\r\n\r\n      if (!this.hideActions) children.push(this.genIcon())\r\n\r\n      return this.$createElement('div', {\r\n        staticClass: 'v-expansion-panel__header',\r\n        directives: [{\r\n          name: 'ripple',\r\n          value: this.ripple\r\n        }],\r\n        on: {\r\n          click: this.onHeaderClick\r\n        }\r\n      }, children)\r\n    },\r\n    genIcon () {\r\n      const icon = this.$slots.actions ||\r\n        [this.$createElement(VIcon, this.expandIcon)]\r\n\r\n      return this.$createElement('transition', {\r\n        attrs: { name: 'fade-transition' }\r\n      }, [\r\n        this.$createElement('div', {\r\n          staticClass: 'v-expansion-panel__header__icon',\r\n          directives: [{\r\n            name: 'show',\r\n            value: !this.isDisabled\r\n          }]\r\n        }, icon)\r\n      ])\r\n    },\r\n    toggle (active: boolean) {\r\n      if (active) this.isBooted = true\r\n\r\n      this.$nextTick(() => (this.isActive = active))\r\n    }\r\n  },\r\n\r\n  render (h): VNode {\r\n    return h('li', {\r\n      staticClass: 'v-expansion-panel__container',\r\n      class: this.containerClasses,\r\n      attrs: {\r\n        tabindex: this.isReadonly || this.isDisabled ? null : 0,\r\n        'aria-expanded': Boolean(this.isActive)\r\n      },\r\n      on: {\r\n        keydown: this.onKeydown\r\n      }\r\n    }, [\r\n      this.$slots.header && this.genHeader(),\r\n      h(VExpandTransition, [this.genBody()])\r\n    ])\r\n  }\r\n})\r\n"],"sourceRoot":""}