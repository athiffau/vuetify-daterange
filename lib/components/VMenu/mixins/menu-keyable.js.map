{"version":3,"sources":["../../../../src/components/VMenu/mixins/menu-keyable.js"],"names":[],"mappings":";;;;;;;;;AAUA;AACA,SAAS,QAAT,QAAyB,uBAAzB;AAEA;AACA,eAAe;AACb,WAAO;AACL,qBAAa;AADR,KADM;AAKb,UAAM;AAAA,eAAO;AACX,uBAAW,CAAC,CADD;AAEX,mBAAO;AAFI,SAAP;AAAA,KALO;AAUb,WAAO;AACL,gBADK,oBACK,GADL,EACQ;AACX,gBAAI,CAAC,GAAL,EAAU,KAAK,SAAL,GAAiB,CAAC,CAAlB;AACX,SAHI;AAIL,iBAJK,qBAIM,IAJN,EAIY,IAJZ,EAIgB;AACnB,gBAAI,QAAQ,KAAK,KAAjB,EAAwB;AACtB,oBAAM,OAAO,KAAK,KAAL,CAAW,IAAX,CAAb;AACA,qBAAK,SAAL,CAAe,GAAf,CAAmB,2BAAnB;AACA,qBAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,GAA+B,KAAK,SAAL,GAAiB,KAAK,YAArD;AACD;AAED,oBAAQ,KAAK,KAAb,IACE,KAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAA2B,MAA3B,CAAkC,2BAAlC,CADF;AAED;AAbI,KAVM;AA0Bb,aAAS;AACP,iBADO,qBACI,CADJ,EACK;AAAA;;AACV,gBAAI,EAAE,OAAF,KAAc,SAAS,GAA3B,EAAgC;AAC9B,qBAAK,QAAL,GAAgB,KAAhB;AACD,aAFD,MAEO,IAAI,EAAE,OAAF,KAAc,SAAS,GAA3B,EAAgC;AACrC,2BAAW,YAAK;AACd,wBAAI,CAAC,MAAK,KAAL,CAAW,OAAX,CAAmB,QAAnB,CAA4B,SAAS,aAArC,CAAL,EAA0D;AACxD,8BAAK,QAAL,GAAgB,KAAhB;AACD;AACF,iBAJD;AAKD,aANM,MAMA;AACL,qBAAK,eAAL,CAAqB,CAArB;AACD;AACF,SAbM;AAcP,uBAdO,2BAcU,CAdV,EAcW;AAChB;AACA,iBAAK,QAAL;AAEA,gBAAI,EAAE,OAAF,KAAc,SAAS,IAAvB,IAA+B,KAAK,SAAL,GAAiB,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAxE,EAA2E;AACzE,qBAAK,SAAL;AACA;AACA;AACD,aAJD,MAIO,IAAI,EAAE,OAAF,KAAc,SAAS,EAAvB,IAA6B,KAAK,SAAL,GAAiB,CAAC,CAAnD,EAAsD;AAC3D,qBAAK,SAAL;AACD,aAFM,MAEA,IAAI,EAAE,OAAF,KAAc,SAAS,KAAvB,IAAgC,KAAK,SAAL,KAAmB,CAAC,CAAxD,EAA2D;AAChE,qBAAK,KAAL,CAAW,KAAK,SAAhB,EAA2B,KAA3B;AACD,aAFM,MAEA;AAAE;AAAQ;AACjB;AACA,cAAE,cAAF;AACD,SA7BM;AA8BP,gBA9BO,sBA8BC;AACN,iBAAK,KAAL,GAAa,KAAK,KAAL,CAAW,OAAX,CAAmB,gBAAnB,CAAoC,eAApC,CAAb;AACD;AAhCM;AA1BI,CAAf","sourcesContent":["/**\r\n * Menu keyable\r\n *\r\n * @mixin\r\n *\r\n * Primarily used to support VSelect\r\n * Handles opening and closing of VMenu from keystrokes\r\n * Will conditionally highlight VListTiles for VSelect\r\n */\r\n\r\n// Utils\r\nimport { keyCodes } from '../../../util/helpers'\r\n\r\n/* @vue/component */\r\nexport default {\r\n  props: {\r\n    disableKeys: Boolean\r\n  },\r\n\r\n  data: () => ({\r\n    listIndex: -1,\r\n    tiles: []\r\n  }),\r\n\r\n  watch: {\r\n    isActive (val) {\r\n      if (!val) this.listIndex = -1\r\n    },\r\n    listIndex (next, prev) {\r\n      if (next in this.tiles) {\r\n        const tile = this.tiles[next]\r\n        tile.classList.add('v-list__tile--highlighted')\r\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\r\n      }\r\n\r\n      prev in this.tiles &&\r\n        this.tiles[prev].classList.remove('v-list__tile--highlighted')\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    onKeyDown (e) {\r\n      if (e.keyCode === keyCodes.esc) {\r\n        this.isActive = false\r\n      } else if (e.keyCode === keyCodes.tab) {\r\n        setTimeout(() => {\r\n          if (!this.$refs.content.contains(document.activeElement)) {\r\n            this.isActive = false\r\n          }\r\n        })\r\n      } else {\r\n        this.changeListIndex(e)\r\n      }\r\n    },\r\n    changeListIndex (e) {\r\n      // For infinite scroll and autocomplete, re-evaluate children\r\n      this.getTiles()\r\n\r\n      if (e.keyCode === keyCodes.down && this.listIndex < this.tiles.length - 1) {\r\n        this.listIndex++\r\n        // Allow user to set listIndex to -1 so\r\n        // that the list can be un-highlighted\r\n      } else if (e.keyCode === keyCodes.up && this.listIndex > -1) {\r\n        this.listIndex--\r\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\r\n        this.tiles[this.listIndex].click()\r\n      } else { return }\r\n      // One of the conditions was met, prevent default action (#2988)\r\n      e.preventDefault()\r\n    },\r\n    getTiles () {\r\n      this.tiles = this.$refs.content.querySelectorAll('.v-list__tile')\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}