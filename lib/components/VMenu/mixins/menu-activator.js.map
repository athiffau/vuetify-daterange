{"version":3,"sources":["../../../../src/components/VMenu/mixins/menu-activator.js"],"names":[],"mappings":";;;;;;;;AAQA;AACA,eAAe;AACb,aAAS;AACP,6BADO,iCACgB,CADhB,EACiB;AACtB,gBAAI,KAAK,WAAL,IAAoB,CAAC,KAAK,QAA9B,EAAwC;AACtC,qBAAK,YAAL,CAAkB,CAAlB,EAAqB,KAArB;AACA,qBAAK,QAAL,GAAgB,IAAhB;AACA,qBAAK,SAAL,GAAiB,EAAE,OAAnB;AACA,qBAAK,SAAL,GAAiB,EAAE,OAAnB;AACD,aALD,MAKO,IAAI,KAAK,YAAL,IAAqB,KAAK,QAA9B,EAAwC;AAC7C,qBAAK,YAAL,CAAkB,CAAlB,EAAqB,IAArB;AACA,qBAAK,QAAL,GAAgB,KAAhB;AACD;AACF,SAXM;AAYP,yBAZO,+BAYU;AAAA;;AACf,iBAAK,QAAL,CAAc,MAAd,EAAsB,YAAK;AACzB,oBAAI,MAAK,cAAT,EAAyB;AAEzB,sBAAK,cAAL,GAAsB,IAAtB;AACA,sBAAK,QAAL,GAAgB,IAAhB;AACD,aALD;AAMD,SAnBM;AAoBP,yBApBO,6BAoBY,CApBZ,EAoBa;AAAA;;AAClB;AACA,iBAAK,QAAL,CAAc,OAAd,EAAuB,YAAK;AAC1B,oBAAI,OAAK,KAAL,CAAW,OAAX,CAAmB,QAAnB,CAA4B,EAAE,aAA9B,CAAJ,EAAkD;AAElD,sCAAsB,YAAK;AACzB,2BAAK,QAAL,GAAgB,KAAhB;AACA,2BAAK,cAAL;AACD,iBAHD;AAID,aAPD;AAQD,SA9BM;AA+BP,0BA/BO,gCA+B6B;AAAA,gBAAhB,SAAgB,uEAAJ,IAAI;;AAClC,gBAAI,CAAC,SAAD,IAAc,KAAK,QAAvB,EAAiC;AACjC,sBAAU,gBAAV,CAA2B,OAA3B,EAAoC,KAAK,qBAAzC;AACD,SAlCM;AAmCP,6BAnCO,mCAmCgC;AAAA,gBAAhB,SAAgB,uEAAJ,IAAI;;AACrC,gBAAI,CAAC,SAAL,EAAgB;AAChB,sBAAU,mBAAV,CAA8B,OAA9B,EAAuC,KAAK,qBAA5C;AACD;AAtCM;AADI,CAAf","sourcesContent":["/**\r\n * Menu activator\r\n *\r\n * @mixin\r\n *\r\n * Handles the click and hover activation\r\n * Supports slotted and detached activators\r\n */\r\n/* @vue/component */\r\nexport default {\r\n  methods: {\r\n    activatorClickHandler (e) {\r\n      if (this.openOnClick && !this.isActive) {\r\n        this.getActivator(e).focus()\r\n        this.isActive = true\r\n        this.absoluteX = e.clientX\r\n        this.absoluteY = e.clientY\r\n      } else if (this.closeOnClick && this.isActive) {\r\n        this.getActivator(e).blur()\r\n        this.isActive = false\r\n      }\r\n    },\r\n    mouseEnterHandler () {\r\n      this.runDelay('open', () => {\r\n        if (this.hasJustFocused) return\r\n\r\n        this.hasJustFocused = true\r\n        this.isActive = true\r\n      })\r\n    },\r\n    mouseLeaveHandler (e) {\r\n      // Prevent accidental re-activation\r\n      this.runDelay('close', () => {\r\n        if (this.$refs.content.contains(e.relatedTarget)) return\r\n\r\n        requestAnimationFrame(() => {\r\n          this.isActive = false\r\n          this.callDeactivate()\r\n        })\r\n      })\r\n    },\r\n    addActivatorEvents (activator = null) {\r\n      if (!activator || this.disabled) return\r\n      activator.addEventListener('click', this.activatorClickHandler)\r\n    },\r\n    removeActivatorEvents (activator = null) {\r\n      if (!activator) return\r\n      activator.removeEventListener('click', this.activatorClickHandler)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}