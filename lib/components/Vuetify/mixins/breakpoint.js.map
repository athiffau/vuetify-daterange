{"version":3,"sources":["../../../../src/components/Vuetify/mixins/breakpoint.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport { VuetifyUseOptions, VuetifyBreakpoint } from 'vuetify/types'\r\n\r\nconst BREAKPOINTS_DEFAULTS = {\r\n  thresholds: {\r\n    xs: 600,\r\n    sm: 960,\r\n    md: 1280,\r\n    lg: 1920\r\n  },\r\n  scrollbarWidth: 16\r\n}\r\n\r\n/**\r\n * Factory function for the breakpoint mixin.\r\n */\r\nexport default function breakpoint (opts: VuetifyUseOptions['breakpoint'] = {}) {\r\n  if (!opts) {\r\n    opts = {}\r\n  }\r\n\r\n  return Vue.extend({\r\n    data () {\r\n      return {\r\n        clientHeight: getClientHeight(),\r\n        clientWidth: getClientWidth(),\r\n        resizeTimeout: undefined as number | undefined,\r\n\r\n        ...BREAKPOINTS_DEFAULTS,\r\n        ...opts\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      breakpoint (): VuetifyBreakpoint {\r\n        const xs = this.clientWidth < this.thresholds.xs\r\n        const sm = this.clientWidth < this.thresholds.sm && !xs\r\n        const md = this.clientWidth < (this.thresholds.md - this.scrollbarWidth) && !(sm || xs)\r\n        const lg = this.clientWidth < (this.thresholds.lg - this.scrollbarWidth) && !(md || sm || xs)\r\n        const xl = this.clientWidth >= (this.thresholds.lg - this.scrollbarWidth)\r\n\r\n        const xsOnly = xs\r\n        const smOnly = sm\r\n        const smAndDown = (xs || sm) && !(md || lg || xl)\r\n        const smAndUp = !xs && (sm || md || lg || xl)\r\n        const mdOnly = md\r\n        const mdAndDown = (xs || sm || md) && !(lg || xl)\r\n        const mdAndUp = !(xs || sm) && (md || lg || xl)\r\n        const lgOnly = lg\r\n        const lgAndDown = (xs || sm || md || lg) && !xl\r\n        const lgAndUp = !(xs || sm || md) && (lg || xl)\r\n        const xlOnly = xl\r\n\r\n        let name\r\n        switch (true) {\r\n          case (xs):\r\n            name = 'xs'\r\n            break\r\n          case (sm):\r\n            name = 'sm'\r\n            break\r\n          case (md):\r\n            name = 'md'\r\n            break\r\n          case (lg):\r\n            name = 'lg'\r\n            break\r\n          default:\r\n            name = 'xl'\r\n            break\r\n        }\r\n\r\n        return {\r\n          // Definite breakpoint.\r\n          xs,\r\n          sm,\r\n          md,\r\n          lg,\r\n          xl,\r\n\r\n          // Useful e.g. to construct CSS class names dynamically.\r\n          name,\r\n\r\n          // Breakpoint ranges.\r\n          xsOnly,\r\n          smOnly,\r\n          smAndDown,\r\n          smAndUp,\r\n          mdOnly,\r\n          mdAndDown,\r\n          mdAndUp,\r\n          lgOnly,\r\n          lgAndDown,\r\n          lgAndUp,\r\n          xlOnly,\r\n\r\n          // For custom breakpoint logic.\r\n          width: this.clientWidth,\r\n          height: this.clientHeight,\r\n          thresholds: this.thresholds,\r\n          scrollbarWidth: this.scrollbarWidth\r\n        }\r\n      }\r\n    },\r\n\r\n    created () {\r\n      if (typeof window === 'undefined') return\r\n\r\n      window.addEventListener('resize', this.onResize, { passive: true })\r\n    },\r\n\r\n    beforeDestroy () {\r\n      if (typeof window === 'undefined') return\r\n\r\n      window.removeEventListener('resize', this.onResize)\r\n    },\r\n\r\n    methods: {\r\n      onResize (): void {\r\n        clearTimeout(this.resizeTimeout)\r\n\r\n        // Added debounce to match what\r\n        // v-resize used to do but was\r\n        // removed due to a memory leak\r\n        // https://github.com/vuetifyjs/vuetify/pull/2997\r\n        this.resizeTimeout = window.setTimeout(this.setDimensions, 200)\r\n      },\r\n      setDimensions (): void {\r\n        this.clientHeight = getClientHeight()\r\n        this.clientWidth = getClientWidth()\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// Cross-browser support as described in:\r\n// https://stackoverflow.com/questions/1248081\r\nfunction getClientWidth () {\r\n  if (typeof document === 'undefined') return 0 // SSR\r\n  return Math.max(\r\n    document.documentElement!.clientWidth,\r\n    window.innerWidth || 0\r\n  )\r\n}\r\n\r\nfunction getClientHeight () {\r\n  if (typeof document === 'undefined') return 0 // SSR\r\n  return Math.max(\r\n    document.documentElement!.clientHeight,\r\n    window.innerHeight || 0\r\n  )\r\n}\r\n"],"sourceRoot":""}