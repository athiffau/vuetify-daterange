{"version":3,"sources":["../../../../src/components/VTabs/mixins/tabs-watchers.js"],"names":[],"mappings":";;;;;AAKA;AACA,eAAe;AACb,WAAO;AACL,iBADK,qBACM,GADN,EACW,MADX,EACiB;AACpB,iBAAK,WAAL;AAEA,gBAAI,CAAC,GAAL,EAAU;AAEV,iBAAK,QAAL,IAAiB,KAAK,QAAL,CACf,KAAK,QAAL,CAAc,GAAd,EAAmB,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAnB,CADe,CAAjB;AAIA;AACA;AACA;AACA,gBAAI,UAAU,IAAd,EAAoB;AAEpB,iBAAK,cAAL;AACD,SAhBI;;AAiBL,wBAAgB,YAjBX;AAkBL,kBAAU,YAlBL;AAmBL,mBAAW,YAnBN;AAoBL,iBApBK,qBAoBM,GApBN,EAoBS;AACZ,gBAAI,CAAC,GAAL,EAAU,KAAK,YAAL,GAAoB,CAApB;AACX,SAtBI;;AAuBL;AACA,qBAxBK,yBAwBU,GAxBV,EAwBa;AAChB;AACA,gBAAI,CAAC,KAAK,UAAL,CAAgB,OAAhB,CAAL,EAA+B;AAE/B,iBAAK,KAAL,CAAW,OAAX,EAAoB,GAApB;AACD,SA7BI;;AA8BL,mBAAW,YA9BN;AA+BL,eAAO,YA/BF;AAgCL,qCAA6B,UAhCxB;AAiCL,sCAA8B,UAjCzB;AAkCL,oBAlCK,wBAkCS,GAlCT,EAkCY;AACf,iBAAK,KAAL,CAAW,SAAX,CAAqB,KAArB,CAA2B,SAA3B,mBAAqD,CAAC,GAAtD;AACA,gBAAI,KAAK,SAAT,EAAoB;AAClB,qBAAK,eAAL,GAAuB,KAAK,aAAL,EAAvB;AACA,qBAAK,eAAL,GAAuB,KAAK,aAAL,EAAvB;AACD;AACF;AAxCI;AADM,CAAf","sourcesContent":["/**\r\n * Tabs watchers\r\n *\r\n * @mixin\r\n */\r\n/* @vue/component */\r\nexport default {\r\n  watch: {\r\n    activeTab (val, oldVal) {\r\n      this.setOverflow()\r\n\r\n      if (!val) return\r\n\r\n      this.tabItems && this.tabItems(\r\n        this.getValue(val, this.items.indexOf(val))\r\n      )\r\n\r\n      // Do nothing for first tab\r\n      // is handled from isBooted\r\n      // watcher\r\n      if (oldVal == null) return\r\n\r\n      this.updateTabsView()\r\n    },\r\n    alignWithTitle: 'callSlider',\r\n    centered: 'callSlider',\r\n    fixedTabs: 'callSlider',\r\n    hasArrows (val) {\r\n      if (!val) this.scrollOffset = 0\r\n    },\r\n    /* @deprecate */\r\n    internalValue (val) {\r\n      /* istanbul ignore else */\r\n      if (!this.$listeners['input']) return\r\n\r\n      this.$emit('input', val)\r\n    },\r\n    lazyValue: 'updateTabs',\r\n    right: 'callSlider',\r\n    '$vuetify.application.left': 'onResize',\r\n    '$vuetify.application.right': 'onResize',\r\n    scrollOffset (val) {\r\n      this.$refs.container.style.transform = `translateX(${-val}px)`\r\n      if (this.hasArrows) {\r\n        this.prevIconVisible = this.checkPrevIcon()\r\n        this.nextIconVisible = this.checkNextIcon()\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}