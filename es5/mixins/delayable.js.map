{"version":3,"sources":["../../src/mixins/delayable.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;;;;;;kBAOe,cAAI,MAAJ,GAA2C,MAA3C,CAAkD;AAC/D,UAAM,WADyD;AAG/D,WAAO;AACL,mBAAW;AACT,kBAAM,CAAC,MAAD,EAAS,MAAT,CADG;AAET,qBAAS;AAFA,SADN;AAKL,oBAAY;AACV,kBAAM,CAAC,MAAD,EAAS,MAAT,CADI;AAEV,qBAAS;AAFC;AALP,KAHwD;AAc/D,UAAM;AAAA,eAAO;AACX,yBAAa,SADF;AAEX,0BAAc;AAFH,SAAP;AAAA,KAdyD;AAmB/D,aAAS;AACP;;;AAGA,kBAJO,wBAIG;AACR,yBAAa,KAAK,WAAlB;AACA,yBAAa,KAAK,YAAlB;AACD,SAPM;;AAQP;;;AAGA,gBAXO,oBAWG,IAXH,EAW2B,EAX3B,EAW0C;AAAA;;AAC/C,iBAAK,UAAL;AAEA,gBAAM,QAAQ,SAAU,KAAgB,IAAhB,WAAV,EAAwC,EAAxC,CAAd;AAEE,iBAAgB,IAAhB,gBAAiC,WAAW,MAAO,YAAK;AACxD,sBAAK,QAAL,GAAgB,EAAE,MAAM,IAAR,EAAc,OAAO,KAArB,GAA6B,IAA7B,CAAhB;AACD,aAFkC,EAE/B,KAF+B,CAAjC;AAGH;AAnBM;AAnBsD,CAAlD,C","sourcesContent":["import Vue from 'vue'\r\n\r\n/**\r\n * Delayable\r\n *\r\n * @mixin\r\n *\r\n * Changes the open or close delay time for elements\r\n */\r\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\r\n  name: 'delayable',\r\n\r\n  props: {\r\n    openDelay: {\r\n      type: [Number, String],\r\n      default: 0\r\n    },\r\n    closeDelay: {\r\n      type: [Number, String],\r\n      default: 0\r\n    }\r\n  },\r\n\r\n  data: () => ({\r\n    openTimeout: undefined as number | undefined,\r\n    closeTimeout: undefined as number | undefined\r\n  }),\r\n\r\n  methods: {\r\n    /**\r\n     * Clear any pending delay timers from executing\r\n     */\r\n    clearDelay (): void {\r\n      clearTimeout(this.openTimeout)\r\n      clearTimeout(this.closeTimeout)\r\n    },\r\n    /**\r\n     * Runs callback after a specified delay\r\n     */\r\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\r\n      this.clearDelay()\r\n\r\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\r\n\r\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\r\n        this.isActive = { open: true, close: false }[type]\r\n      }), delay)\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}