{"version":3,"sources":["../../src/mixins/translatable.ts"],"names":[],"mappings":";;;;;;;;;;;;kBAEe,cAAI,MAAJ,CAAW;AACxB,UAAM,cADkB;AAGxB,WAAO;AACL,gBAAQ;AADH,KAHiB;AAOxB,UAAM;AAAA,eAAO;AACX,yBAAa,CADF;AAEX,sBAAU,CAFC;AAGX,0BAAc,CAHH;AAIX,6BAAiB,CAJN;AAKX,uBAAW,CALA;AAMX,0BAAc,CANH;AAOX,0BAAc;AAPH,SAAP;AAAA,KAPkB;AAiBxB,cAAU;AACR,iBADQ,uBACC;AACP,mBAAO,KAAK,SAAL,EAAP;AACD;AAHO,KAjBc;AAuBxB,iBAvBwB,2BAuBX;AACX,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACA,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACD,KA1BuB;;AA4BxB,aAAS;AACP,sBADO,4BACO;AACZ,gBAAM,SAAS,KAAK,GAAL,CAAS,qBAAT,EAAf;AAEA,iBAAK,SAAL,GAAiB,OAAO,WAAxB;AACA,iBAAK,YAAL,GAAoB,KAAK,SAAL,GAAiB,KAAK,MAA1C;AACA,iBAAK,WAAL,GAAmB,OAAO,GAAP,GAAa,KAAK,SAArC;AACA,iBAAK,YAAL,GAAoB,OAAO,WAA3B;AACA,iBAAK,YAAL,GAAoB,KAAK,SAAL,GAAiB,KAAK,YAA1C;AACD,SATM;AAUP,iBAVO,uBAUE;AACP,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACA,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACD,SAbM;;AAcP;AACA,iBAfO,uBAeE;AACP,kBAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD,SAjBM;AAkBP,iBAlBO,uBAkBE;AACP,iBAAK,cAAL;AAEA,iBAAK,eAAL,GACE,CAAC,KAAK,YAAL,GAAoB,KAAK,WAA1B,KACC,SAAS,KAAK,MAAd,IAAwB,KAAK,YAD9B,CADF;AAKA,iBAAK,QAAL,GAAgB,KAAK,KAAL,CAAW,KAAK,YAAL,GAAoB,KAAK,eAApC,CAAhB;AACD;AA3BM;AA5Be,CAAX,C","sourcesContent":["import Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'translatable',\r\n\r\n  props: {\r\n    height: Number\r\n  },\r\n\r\n  data: () => ({\r\n    elOffsetTop: 0,\r\n    parallax: 0,\r\n    parallaxDist: 0,\r\n    percentScrolled: 0,\r\n    scrollTop: 0,\r\n    windowHeight: 0,\r\n    windowBottom: 0\r\n  }),\r\n\r\n  computed: {\r\n    imgHeight (): number {\r\n      return this.objHeight()\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    window.removeEventListener('scroll', this.translate, false)\r\n    window.removeEventListener('resize', this.translate, false)\r\n  },\r\n\r\n  methods: {\r\n    calcDimensions () {\r\n      const offset = this.$el.getBoundingClientRect()\r\n\r\n      this.scrollTop = window.pageYOffset\r\n      this.parallaxDist = this.imgHeight - this.height\r\n      this.elOffsetTop = offset.top + this.scrollTop\r\n      this.windowHeight = window.innerHeight\r\n      this.windowBottom = this.scrollTop + this.windowHeight\r\n    },\r\n    listeners () {\r\n      window.addEventListener('scroll', this.translate, false)\r\n      window.addEventListener('resize', this.translate, false)\r\n    },\r\n    /** @abstract **/\r\n    objHeight (): number {\r\n      throw new Error('Not implemented !')\r\n    },\r\n    translate () {\r\n      this.calcDimensions()\r\n\r\n      this.percentScrolled = (\r\n        (this.windowBottom - this.elOffsetTop) /\r\n        (parseInt(this.height) + this.windowHeight)\r\n      )\r\n\r\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}