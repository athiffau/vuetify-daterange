{"version":3,"sources":["../../src/mixins/themeable.ts"],"names":[],"mappings":";;;;;;;;QAUgB,sB,GAAA,sB;;;;;;;;AAAV,SAAU,sBAAV,CAAkC,OAAlC,EAAwD;AAC5D,QAAM,kBACD,QAAQ,KADP,EAED,QAAQ,UAFP,CAAN;AAIA,QAAM,SAAS,UAAU,OAAV,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,IAAlC,CAAuC,EAAvC,CAAf;AACA,WAAO,UAAU,OAAV,CAAkB,QAAlB,CAA2B,YAA3B,CAAwC,IAAxC,CAA6C,EAAE,cAAF,EAA7C,CAAP;AACD;AAED;AACA,IAAM,YAAY,cAAI,MAAJ,GAAwB,MAAxB,CAA+B;AAC/C,UAAM,WADyC;AAG/C,WAH+C,qBAGxC;AACL,eAAO;AACL,mBAAO,KAAK;AADP,SAAP;AAGD,KAP8C;;AAS/C,YAAQ;AACN,eAAO;AACL,qBAAS;AACP,wBAAQ;AADD;AADJ;AADD,KATuC;AAiB/C,WAAO;AACL,cAAM;AACJ,kBAAM,OADF;AAEJ,qBAAS;AAFL,SADD;AAKL,eAAO;AACL,kBAAM,OADD;AAEL,qBAAS;AAFJ;AALF,KAjBwC;AA4B/C,QA5B+C,kBA4B3C;AACF,eAAO;AACL,8BAAkB;AAChB,wBAAQ;AADQ;AADb,SAAP;AAKD,KAlC8C;;AAoC/C,cAAU;AACR,cADQ,oBACF;AACJ,gBAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,uBAAO,IAAP;AACD,aAHD,MAGO,IAAI,KAAK,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,uBAAO,KAAP;AACD,aAHM,MAGA;AACL;AACA,uBAAO,KAAK,KAAL,CAAW,MAAlB;AACD;AACF,SAZO;AAaR,oBAbQ,0BAaI;AACV,mBAAO;AACL,+BAAe,KAAK,MADf;AAEL,gCAAgB,CAAC,KAAK;AAFjB,aAAP;AAID,SAlBO;;AAmBR;AACA,kBApBQ,wBAoBE;AACR,gBAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,uBAAO,IAAP;AACD,aAHD,MAGO,IAAI,KAAK,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,uBAAO,KAAP;AACD,aAHM,MAGA;AACL;AACA,uBAAO,KAAK,QAAL,CAAc,IAArB;AACD;AACF,SA/BO;AAgCR,wBAhCQ,8BAgCQ;AACd,mBAAO;AACL,+BAAe,KAAK,UADf;AAEL,gCAAgB,CAAC,KAAK;AAFjB,aAAP;AAID;AArCO,KApCqC;AA4E/C,WAAO;AACL,gBAAQ;AACN,mBADM,mBACG,MADH,EACW,MADX,EACiB;AACrB,oBAAI,WAAW,MAAf,EAAuB;AACrB,yBAAK,gBAAL,CAAsB,MAAtB,GAA+B,KAAK,MAApC;AACD;AACF,aALK;;AAMN,uBAAW;AANL;AADH;AA5EwC,CAA/B,CAAlB;kBAwFe,S","sourcesContent":["import Vue from 'vue'\r\nimport { PropValidator, RenderContext } from 'vue/types/options'\r\n\r\n/* eslint-disable-next-line no-use-before-define */\r\ninterface Themeable extends Vue {\r\n  theme: {\r\n    isDark: boolean\r\n  }\r\n}\r\n\r\nexport function functionalThemeClasses (context: RenderContext): object {\r\n  const vm = {\r\n    ...context.props,\r\n    ...context.injections\r\n  }\r\n  const isDark = Themeable.options.computed.isDark.call(vm)\r\n  return Themeable.options.computed.themeClasses.call({ isDark })\r\n}\r\n\r\n/* @vue/component */\r\nconst Themeable = Vue.extend<Themeable>().extend({\r\n  name: 'themeable',\r\n\r\n  provide (): object {\r\n    return {\r\n      theme: this.themeableProvide\r\n    }\r\n  },\r\n\r\n  inject: {\r\n    theme: {\r\n      default: {\r\n        isDark: false\r\n      }\r\n    }\r\n  },\r\n\r\n  props: {\r\n    dark: {\r\n      type: Boolean,\r\n      default: null\r\n    } as PropValidator<boolean | null>,\r\n    light: {\r\n      type: Boolean,\r\n      default: null\r\n    } as PropValidator<boolean | null>\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      themeableProvide: {\r\n        isDark: false\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isDark (): boolean {\r\n      if (this.dark === true) {\r\n        // explicitly dark\r\n        return true\r\n      } else if (this.light === true) {\r\n        // explicitly light\r\n        return false\r\n      } else {\r\n        // inherit from parent, or default false if there is none\r\n        return this.theme.isDark\r\n      }\r\n    },\r\n    themeClasses (): object {\r\n      return {\r\n        'theme--dark': this.isDark,\r\n        'theme--light': !this.isDark\r\n      }\r\n    },\r\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\r\n    rootIsDark (): boolean {\r\n      if (this.dark === true) {\r\n        // explicitly dark\r\n        return true\r\n      } else if (this.light === true) {\r\n        // explicitly light\r\n        return false\r\n      } else {\r\n        // inherit from v-app\r\n        return this.$vuetify.dark\r\n      }\r\n    },\r\n    rootThemeClasses (): Dictionary<boolean> {\r\n      return {\r\n        'theme--dark': this.rootIsDark,\r\n        'theme--light': !this.rootIsDark\r\n      }\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    isDark: {\r\n      handler (newVal, oldVal) {\r\n        if (newVal !== oldVal) {\r\n          this.themeableProvide.isDark = this.isDark\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n})\r\n\r\nexport default Themeable\r\n"],"sourceRoot":""}