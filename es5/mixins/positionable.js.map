{"version":3,"sources":["../../src/mixins/positionable.ts"],"names":[],"mappings":";;;;;QAkBgB,O,GAAA,O;;;;;;AAjBhB;;;;AAGA,IAAM,iBAAiB;AACrB,YAAU,OADW;AAErB,UAAQ,OAFa;AAGrB,SAAO,OAHc;AAIrB,QAAM,OAJe;AAKrB,SAAO,OALc;AAMrB,OAAK;AANgB,CAAvB;AAcM,SAAU,OAAV,GAAuC;AAAA,MAApB,QAAoB,uEAAF,EAAE;;AAC3C,SAAO,cAAI,MAAJ,CAAW;AAChB,UAAM,cADU;AAEhB,WAAO,SAAS,MAAT,GAAkB,iCAAmB,cAAnB,EAAmC,QAAnC,CAAlB,GAAiE;AAFxD,GAAX,CAAP;AAID;kBAEc,S;AAEf;AACA","sourcesContent":["import Vue from 'vue'\r\nimport { filterObjectOnKeys } from '../util/helpers'\r\nimport { OptionsVue, VueConstructor } from 'vue/types/vue'\r\n\r\nconst availableProps = {\r\n  absolute: Boolean,\r\n  bottom: Boolean,\r\n  fixed: Boolean,\r\n  left: Boolean,\r\n  right: Boolean,\r\n  top: Boolean\r\n}\r\ntype props = Record<keyof typeof availableProps, boolean>\r\n\r\nexport type Positionable<S extends keyof props> = VueConstructor<Vue & { [P in S]: boolean }, { [P in S]: BooleanConstructor }>\r\n\r\nexport function factory <S extends keyof props> (selected?: S[]): Positionable<S>\r\nexport function factory (selected: undefined): OptionsVue<Vue, {}, {}, {}, props, typeof availableProps>\r\nexport function factory (selected: any[] = []): any {\r\n  return Vue.extend({\r\n    name: 'positionable',\r\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps\r\n  })\r\n}\r\n\r\nexport default factory()\r\n\r\n// Add a `*` before the second `/`\r\n/* Tests /\r\nlet single = factory(['top']).extend({\r\n  created () {\r\n    this.top\r\n    this.bottom\r\n    this.absolute\r\n  }\r\n})\r\n\r\nlet some = factory(['top', 'bottom']).extend({\r\n  created () {\r\n    this.top\r\n    this.bottom\r\n    this.absolute\r\n  }\r\n})\r\n\r\nlet all = factory().extend({\r\n  created () {\r\n    this.top\r\n    this.bottom\r\n    this.absolute\r\n    this.foobar\r\n  }\r\n})\r\n/**/\r\n"],"sourceRoot":""}