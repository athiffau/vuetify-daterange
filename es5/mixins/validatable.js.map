{"version":3,"sources":["../../src/mixins/validatable.ts"],"names":[],"mappings":"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","sourcesContent":["// Mixins\r\nimport Colorable from './colorable'\r\nimport { inject as RegistrableInject } from './registrable'\r\n\r\n// Utilities\r\nimport { deepEqual } from '../util/helpers'\r\nimport { consoleError } from '../util/console'\r\nimport mixins from '../util/mixins'\r\n\r\n// Types\r\nimport { PropValidator } from 'vue/types/options'\r\nexport type VuetifyRuleValidator = (value: any) => string | false\r\nexport type VuetifyMessage = string | string[]\r\nexport type VuetifyRuleValidations = (VuetifyRuleValidator | string)[]\r\n\r\n/* @vue/component */\r\nexport default mixins(\r\n  Colorable,\r\n  RegistrableInject('form')\r\n).extend({\r\n  name: 'validatable',\r\n\r\n  props: {\r\n    disabled: Boolean,\r\n    error: Boolean,\r\n    errorCount: {\r\n      type: [Number, String],\r\n      default: 1\r\n    },\r\n    errorMessages: {\r\n      type: [String, Array],\r\n      default: () => []\r\n    } as PropValidator<VuetifyMessage>,\r\n    messages: {\r\n      type: [String, Array],\r\n      default: () => []\r\n    } as PropValidator<VuetifyMessage>,\r\n    readonly: Boolean,\r\n    rules: {\r\n      type: Array,\r\n      default: () => []\r\n    } as PropValidator<VuetifyRuleValidations>,\r\n    success: Boolean,\r\n    successMessages: {\r\n      type: [String, Array],\r\n      default: () => []\r\n    } as PropValidator<VuetifyMessage>,\r\n    validateOnBlur: Boolean,\r\n    value: { required: false }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      errorBucket: [] as string[],\r\n      hasColor: false,\r\n      hasFocused: false,\r\n      hasInput: false,\r\n      isFocused: false,\r\n      isResetting: false,\r\n      lazyValue: this.value,\r\n      valid: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    hasError (): boolean {\r\n      return (\r\n        this.internalErrorMessages.length > 0 ||\r\n        this.errorBucket.length > 0 ||\r\n        this.error\r\n      )\r\n    },\r\n    // TODO: Add logic that allows the user to enable based\r\n    // upon a good validation\r\n    hasSuccess (): boolean {\r\n      return (\r\n        this.internalSuccessMessages.length > 0 ||\r\n        this.success\r\n      )\r\n    },\r\n    externalError (): boolean {\r\n      return this.internalErrorMessages.length > 0 || this.error\r\n    },\r\n    hasMessages (): boolean {\r\n      return this.validationTarget.length > 0\r\n    },\r\n    hasState (): boolean {\r\n      return (\r\n        this.hasSuccess ||\r\n        (this.shouldValidate && this.hasError)\r\n      )\r\n    },\r\n    internalErrorMessages (): VuetifyRuleValidations {\r\n      return this.genInternalMessages(this.errorMessages)\r\n    },\r\n    internalMessages (): VuetifyRuleValidations {\r\n      return this.genInternalMessages(this.messages)\r\n    },\r\n    internalSuccessMessages (): VuetifyRuleValidations {\r\n      return this.genInternalMessages(this.successMessages)\r\n    },\r\n    internalValue: {\r\n      get (): unknown {\r\n        return this.lazyValue\r\n      },\r\n      set (val: any) {\r\n        this.lazyValue = val\r\n\r\n        this.$emit('input', val)\r\n      }\r\n    },\r\n    shouldValidate (): boolean {\r\n      if (this.externalError) return true\r\n      if (this.isResetting) return false\r\n\r\n      return this.validateOnBlur\r\n        ? this.hasFocused && !this.isFocused\r\n        : (this.hasInput || this.hasFocused)\r\n    },\r\n    validations (): VuetifyRuleValidations {\r\n      return this.validationTarget.slice(0, Number(this.errorCount))\r\n    },\r\n    validationState (): string | undefined {\r\n      if (this.hasError && this.shouldValidate) return 'error'\r\n      if (this.hasSuccess) return 'success'\r\n      if (this.hasColor) return this.color\r\n      return undefined\r\n    },\r\n    validationTarget (): VuetifyRuleValidations {\r\n      if (this.internalErrorMessages.length > 0) {\r\n        return this.internalErrorMessages\r\n      } else if (this.successMessages.length > 0) {\r\n        return this.internalSuccessMessages\r\n      } else if (this.messages.length > 0) {\r\n        return this.internalMessages\r\n      } else if (this.shouldValidate) {\r\n        return this.errorBucket\r\n      } else return []\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    rules: {\r\n      handler (newVal, oldVal) {\r\n        if (deepEqual(newVal, oldVal)) return\r\n        this.validate()\r\n      },\r\n      deep: true\r\n    },\r\n    internalValue () {\r\n      // If it's the first time we're setting input,\r\n      // mark it with hasInput\r\n      this.hasInput = true\r\n      this.validateOnBlur || this.$nextTick(this.validate)\r\n    },\r\n    isFocused (val) {\r\n      // Should not check validation\r\n      // if disabled or readonly\r\n      if (\r\n        !val &&\r\n        !this.disabled &&\r\n        !this.readonly\r\n      ) {\r\n        this.hasFocused = true\r\n        this.validateOnBlur && this.validate()\r\n      }\r\n    },\r\n    isResetting () {\r\n      setTimeout(() => {\r\n        this.hasInput = false\r\n        this.hasFocused = false\r\n        this.isResetting = false\r\n        this.validate()\r\n      }, 0)\r\n    },\r\n    hasError (val) {\r\n      if (this.shouldValidate) {\r\n        this.$emit('update:error', val)\r\n      }\r\n    },\r\n    value (val) {\r\n      this.lazyValue = val\r\n    }\r\n  },\r\n\r\n  beforeMount () {\r\n    this.validate()\r\n  },\r\n\r\n  created () {\r\n    this.form && this.form.register(this)\r\n  },\r\n\r\n  beforeDestroy () {\r\n    this.form && this.form.unregister(this)\r\n  },\r\n\r\n  methods: {\r\n    genInternalMessages (messages: VuetifyMessage): VuetifyRuleValidations {\r\n      if (!messages) return []\r\n      else if (Array.isArray(messages)) return messages\r\n      else return [messages]\r\n    },\r\n    /** @public */\r\n    reset () {\r\n      this.isResetting = true\r\n      this.internalValue = Array.isArray(this.internalValue)\r\n        ? []\r\n        : undefined\r\n    },\r\n    /** @public */\r\n    resetValidation () {\r\n      this.isResetting = true\r\n    },\r\n    /** @public */\r\n    validate (force = false, value?: any): boolean {\r\n      const errorBucket = []\r\n      value = value || this.internalValue\r\n\r\n      if (force) this.hasInput = this.hasFocused = true\r\n\r\n      for (let index = 0; index < this.rules.length; index++) {\r\n        const rule = this.rules[index]\r\n        const valid = typeof rule === 'function' ? rule(value) : rule\r\n\r\n        if (typeof valid === 'string') {\r\n          errorBucket.push(valid)\r\n        } else if (typeof valid !== 'boolean') {\r\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this)\r\n        }\r\n      }\r\n\r\n      this.errorBucket = errorBucket\r\n      this.valid = errorBucket.length === 0\r\n\r\n      return this.valid\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}