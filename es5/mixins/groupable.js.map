{"version":3,"sources":["../../src/mixins/groupable.ts"],"names":[],"mappings":";;;;;QAgBgB,O,GAAA,O;;AAfhB;;;;;AAeM,SAAU,OAAV,CACJ,SADI,EAEJ,KAFI,EAGJ,MAHI,EAGW;AAEf,WAAO,yBAAkB,SAAlB,EAA6B,KAA7B,EAAoC,MAApC,EAA4C,MAA5C,CAAmD;AACxD,cAAM,WADkD;AAGxD,eAAO;AACL,yBAAa;AACX,sBAAM,MADK;AAEX,uBAFW,sBAEJ;AACL,wBAAI,CAAC,KAAK,SAAL,CAAL,EAAsB,OAAO,SAAP;AAEtB,2BAAO,KAAK,SAAL,EAAgB,WAAvB;AACD;AANU,aADR;AASL,sBAAU;AATL,SAHiD;AAexD,YAfwD,kBAepD;AACF,mBAAO;AACL,0BAAU;AADL,aAAP;AAGD,SAnBuD;;AAqBxD,kBAAU;AACR,wBADQ,0BACI;AACV,oBAAI,CAAC,KAAK,WAAV,EAAuB,OAAO,EAAP;AAEvB,2CACG,KAAK,WADR,EACsB,KAAK,QAD3B;AAGD;AAPO,SArB8C;AA+BxD,eA/BwD,qBA+BjD;AACL,iBAAK,SAAL,KAAoB,KAAK,SAAL,EAAwB,QAAxB,CAAiC,IAAjC,CAApB;AACD,SAjCuD;AAmCxD,qBAnCwD,2BAmC3C;AACX,iBAAK,SAAL,KAAoB,KAAK,SAAL,EAAwB,UAAxB,CAAmC,IAAnC,CAApB;AACD,SArCuD;;AAuCxD,iBAAS;AACP,kBADO,oBACD;AACJ,qBAAK,KAAL,CAAW,QAAX;AACD;AAHM;AAvC+C,KAAnD,CAAP;AA6CD;AAED;AACA,IAAM,YAAY,QAAQ,WAAR,CAAlB;kBAEe,S","sourcesContent":["// Mixins\r\nimport { Registrable, inject as RegistrableInject } from './registrable'\r\n\r\n// Utilities\r\nimport { ExtractVue } from '../util/mixins'\r\nimport { PropValidator } from 'vue/types/options'\r\nimport { VueConstructor } from 'vue'\r\n\r\n/* eslint-disable-next-line no-use-before-define */\r\nexport type Groupable<T extends string> = VueConstructor<ExtractVue<Registrable<T>> & {\r\n  activeClass: string\r\n  isActive: boolean\r\n  groupClasses: object\r\n  toggle (): void\r\n}>\r\n\r\nexport function factory<T extends string> (\r\n  namespace: T,\r\n  child?: string,\r\n  parent?: string\r\n): Groupable<T> {\r\n  return RegistrableInject(namespace, child, parent).extend({\r\n    name: 'groupable',\r\n\r\n    props: {\r\n      activeClass: {\r\n        type: String,\r\n        default (): string | undefined {\r\n          if (!this[namespace]) return undefined\r\n\r\n          return this[namespace].activeClass\r\n        }\r\n      } as any as PropValidator<string>,\r\n      disabled: Boolean\r\n    },\r\n\r\n    data () {\r\n      return {\r\n        isActive: false\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      groupClasses (): object {\r\n        if (!this.activeClass) return {}\r\n\r\n        return {\r\n          [this.activeClass]: this.isActive\r\n        }\r\n      }\r\n    },\r\n\r\n    created () {\r\n      this[namespace] && (this[namespace] as any).register(this)\r\n    },\r\n\r\n    beforeDestroy () {\r\n      this[namespace] && (this[namespace] as any).unregister(this)\r\n    },\r\n\r\n    methods: {\r\n      toggle () {\r\n        this.$emit('change')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/* eslint-disable-next-line no-redeclare */\r\nconst Groupable = factory('itemGroup')\r\n\r\nexport default Groupable\r\n"],"sourceRoot":""}