{"version":3,"sources":["../../../../src/components/Vuetify/goTo/index.ts"],"names":[],"mappings":";;;;;;;;kBAgBwB,I;;;;IAhBZ,c;;AACZ;;AAIA;;;;;;;;AAWc,SAAU,IAAV,CAAgB,OAAhB,EAA0E;AAAA,QAArC,SAAqC,uEAAF,EAAE;;AACtF,QAAM;AACJ,mBAAY,SAAS,gBAAT,IAAoD,SAAS,IAA7D,IAAqE,SAAS,eADtF;AAEJ,kBAAU,GAFN;AAGJ,gBAAQ,CAHJ;AAIJ,gBAAQ,gBAJJ;AAKJ,mBAAW;AALP,OAMD,SANC,CAAN;AAQA,QAAM,YAAY,wBAAa,SAAS,SAAtB,CAAlB;AAEA,QAAI,SAAS,SAAb,EAAwB;AACtB,YAAM,WAAW,UAAU,SAAV,CAAoB,QAApB,CAA6B,qBAA7B,CAAjB;AACA,YAAM,YAAY,UAAU,SAAV,CAAoB,QAApB,CAA6B,8BAA7B,CAAlB;AAEA,iBAAS,MAAT,IAAmB,cAAI,SAAJ,CAAc,QAAd,CAAuB,WAAvB,CAAmC,GAAtD;AACA,YAAI,CAAC,QAAD,IAAa,SAAjB,EAA4B,SAAS,MAAT,IAAmB,cAAI,SAAJ,CAAc,QAAd,CAAuB,WAAvB,CAAmC,GAAtD;AAC7B;AAED,QAAM,YAAY,YAAY,GAAZ,EAAlB;AACA,QAAM,iBAAiB,qBAAU,OAAV,IAAqB,SAAS,MAArD;AACA,QAAM,gBAAgB,UAAU,SAAhC;AACA,QAAI,mBAAmB,aAAvB,EAAsC,OAAO,QAAQ,OAAR,CAAgB,cAAhB,CAAP;AAEtC,QAAM,OAAO,OAAO,SAAS,MAAhB,KAA2B,UAA3B,GACT,SAAS,MADA,GAER,eAA6D,SAAS,MAAtE,CAFL;AAGA,QAAI,CAAC,IAAL,EAAW,MAAM,IAAI,SAAJ,uBAAkC,SAAS,MAA3C,kBAAN;AAEX;AACA,WAAO,IAAI,OAAJ,CAAY;AAAA,eAAW,sBAAsB,SAAS,IAAT,CAAe,WAAf,EAAkC;AACpF,gBAAM,cAAc,cAAc,SAAlC;AACA,gBAAM,WAAW,KAAK,GAAL,CAAS,SAAS,QAAT,GAAoB,KAAK,GAAL,CAAS,cAAc,SAAS,QAAhC,EAA0C,CAA1C,CAApB,GAAmE,CAA5E,CAAjB;AAEA,sBAAU,SAAV,GAAsB,KAAK,KAAL,CAAW,gBAAgB,CAAC,iBAAiB,aAAlB,IAAmC,KAAK,QAAL,CAA9D,CAAtB;AAEA,gBAAI,aAAa,CAAb,IAAkB,UAAU,YAAV,GAAyB,UAAU,SAAnC,KAAiD,UAAU,YAAjF,EAA+F;AAC7F,uBAAO,QAAQ,cAAR,CAAP;AACD;AAED,kCAAsB,IAAtB;AACD,SAX6B,CAAX;AAAA,KAAZ,CAAP;AAYD","sourcesContent":["import * as easingPatterns from './easing-patterns'\r\nimport {\r\n  getContainer,\r\n  getOffset\r\n} from './util'\r\nimport Vue from 'vue'\r\n\r\ntype GoToTarget = number | string | HTMLElement | Vue\r\ninterface GoToSettings {\r\n  container: string | HTMLElement | Vue\r\n  duration: number\r\n  offset: number\r\n  easing: string | easingPatterns.EasingFunction\r\n  appOffset: boolean\r\n}\r\n\r\nexport default function goTo (_target: GoToTarget, _settings: Partial<GoToSettings> = {}): Promise<number> {\r\n  const settings: GoToSettings = {\r\n    container: (document.scrollingElement as HTMLElement | null) || document.body || document.documentElement,\r\n    duration: 500,\r\n    offset: 0,\r\n    easing: 'easeInOutCubic',\r\n    appOffset: true,\r\n    ..._settings\r\n  }\r\n  const container = getContainer(settings.container)\r\n\r\n  if (settings.appOffset) {\r\n    const isDrawer = container.classList.contains('v-navigation-drawer')\r\n    const isClipped = container.classList.contains('v-navigation-drawer--clipped')\r\n\r\n    settings.offset += Vue.prototype.$vuetify.application.bar\r\n    if (!isDrawer || isClipped) settings.offset += Vue.prototype.$vuetify.application.top\r\n  }\r\n\r\n  const startTime = performance.now()\r\n  const targetLocation = getOffset(_target) - settings.offset\r\n  const startLocation = container.scrollTop\r\n  if (targetLocation === startLocation) return Promise.resolve(targetLocation)\r\n\r\n  const ease = typeof settings.easing === 'function'\r\n    ? settings.easing\r\n    : (easingPatterns as Dictionary<easingPatterns.EasingFunction>)[settings.easing]\r\n  if (!ease) throw new TypeError(`Easing function \"${settings.easing}\" not found.`)\r\n\r\n  // tslint:disable-next-line:promise-must-complete\r\n  return new Promise(resolve => requestAnimationFrame(function step (currentTime: number) {\r\n    const timeElapsed = currentTime - startTime\r\n    const progress = Math.abs(settings.duration ? Math.min(timeElapsed / settings.duration, 1) : 1)\r\n\r\n    container.scrollTop = Math.floor(startLocation + (targetLocation - startLocation) * ease(progress))\r\n\r\n    if (progress === 1 || container.clientHeight + container.scrollTop === container.scrollHeight) {\r\n      return resolve(targetLocation)\r\n    }\r\n\r\n    requestAnimationFrame(step)\r\n  }))\r\n}\r\n"],"sourceRoot":""}