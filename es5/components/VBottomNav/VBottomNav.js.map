{"version":3,"sources":["../../../src/components/VBottomNav/VBottomNav.ts"],"names":[],"mappings":";;;;;;AACA;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;kBAMe,sBACb,+BAAgB,QAAhB,EAA0B,CACxB,QADwB,EAExB,OAFwB,CAA1B,CADa,EAKb,mBALa,EAMb;AACA;AAPa,EAQb,MARa,CAQN;AACP,UAAM,cADC;AAGP,WAAO;AACL,gBAAQ,CAAC,MAAD,EAAS,MAAT,CADH;AAEL,mBAAW,OAFN;AAGL,gBAAQ;AACN,qBAAS,EADH;AAEN,kBAAM,CAAC,MAAD,EAAS,MAAT,CAFA;AAGN,uBAAW,mBAAC,CAAD;AAAA,uBAAiC,CAAC,MAAM,SAAS,CAAT,CAAN,CAAlC;AAAA;AAHL,SAHH;AAQL,eAAO,OARF;AASL,eAAO;AATF,KAHA;AAeP,cAAU;AACR,eADQ,qBACD;AACL,mBAAO;AACL,0CAA0B,KAAK,QAD1B;AAEL,uCAAuB,CAAC,KAAK,QAAN,KAAmB,KAAK,GAAL,IAAY,KAAK,KAApC,CAFlB;AAGL,uCAAuB,KAAK,KAHvB;AAIL,wCAAwB,KAAK;AAJxB,aAAP;AAMD,SARO;AASR,sBATQ,4BASM;AACZ,mBAAO,SAAS,KAAK,MAAd,CAAP;AACD;AAXO,KAfH;AA6BP,aAAS;AACP,yBADO,+BACU;AACf,mBAAO,CAAC,KAAK,KAAN,GACH,CADG,GAEH,KAAK,cAFT;AAGD,SALM;AAMP,mBANO,uBAMM,GANN,EAMc;AACnB,iBAAK,KAAL,CAAW,eAAX,EAA4B,GAA5B;AACD;AARM,KA7BF;AAwCP,UAxCO,kBAwCC,CAxCD,EAwCE;AACP,eAAO,EAAE,qBAAF,EAAe,KAAK,kBAAL,CAAwB,KAAK,KAA7B,EAAoC;AACxD,yBAAa,cAD2C;AAExD,mBAAO,KAAK,OAF4C;AAGxD,mBAAO;AACL,wBAAW,SAAS,KAAK,cAAd,CAAX;AADK,aAHiD;AAMxD,mBAAO;AACL,2BAAW,QAAQ,KAAK,SAAL,IAAkB,KAAK,MAAL,KAAgB,SAA1C,CADN;AAEL,uBAAO,KAAK;AAFP,aANiD;AAUxD,gBAAI,EAAE,QAAQ,KAAK,WAAf;AAVoD,SAApC,CAAf,EAWH,KAAK,MAAL,CAAY,OAXT,CAAP;AAYD;AArDM,CARM,C;AAPf;;AANA","sourcesContent":["// Styles\r\nimport '../../stylus/components/_bottom-navs.styl'\r\n\r\n// Mixins\r\nimport Applicationable from '../../mixins/applicationable'\r\nimport ButtonGroup from '../../mixins/button-group'\r\nimport Colorable from '../../mixins/colorable'\r\nimport Themeable from '../../mixins/themeable'\r\n\r\n// Util\r\nimport mixins from '../../util/mixins'\r\n\r\n// Types\r\nimport { VNode } from 'vue'\r\nimport { PropValidator } from 'vue/types/options'\r\n\r\nexport default mixins(\r\n  Applicationable('bottom', [\r\n    'height',\r\n    'value'\r\n  ]),\r\n  Colorable,\r\n  Themeable\r\n  /* @vue/component */\r\n).extend({\r\n  name: 'v-bottom-nav',\r\n\r\n  props: {\r\n    active: [Number, String],\r\n    mandatory: Boolean,\r\n    height: {\r\n      default: 56,\r\n      type: [Number, String],\r\n      validator: (v: string | number): boolean => !isNaN(parseInt(v))\r\n    },\r\n    shift: Boolean,\r\n    value: null as any as PropValidator<any>\r\n  },\r\n\r\n  computed: {\r\n    classes (): object {\r\n      return {\r\n        'v-bottom-nav--absolute': this.absolute,\r\n        'v-bottom-nav--fixed': !this.absolute && (this.app || this.fixed),\r\n        'v-bottom-nav--shift': this.shift,\r\n        'v-bottom-nav--active': this.value\r\n      }\r\n    },\r\n    computedHeight (): number {\r\n      return parseInt(this.height)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    updateApplication (): number {\r\n      return !this.value\r\n        ? 0\r\n        : this.computedHeight\r\n    },\r\n    updateValue (val: any) {\r\n      this.$emit('update:active', val)\r\n    }\r\n  },\r\n\r\n  render (h): VNode {\r\n    return h(ButtonGroup, this.setBackgroundColor(this.color, {\r\n      staticClass: 'v-bottom-nav',\r\n      class: this.classes,\r\n      style: {\r\n        height: `${parseInt(this.computedHeight)}px`\r\n      },\r\n      props: {\r\n        mandatory: Boolean(this.mandatory || this.active !== undefined),\r\n        value: this.active\r\n      },\r\n      on: { change: this.updateValue }\r\n    }), this.$slots.default)\r\n  }\r\n})\r\n"],"sourceRoot":""}