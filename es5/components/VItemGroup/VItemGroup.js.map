{"version":3,"sources":["../../../src/components/VItemGroup/VItemGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\r\nimport '../../stylus/components/_item-group.styl'\r\n\r\n// Mixins\r\nimport Groupable from '../../mixins/groupable'\r\nimport Proxyable from '../../mixins/proxyable'\r\nimport Themeable from '../../mixins/themeable'\r\n\r\n// Utilities\r\nimport mixins from '../../util/mixins'\r\nimport { consoleWarn } from '../../util/console'\r\n\r\n// Types\r\nimport { VNode } from 'vue/types'\r\n\r\ntype GroupableInstance = InstanceType<typeof Groupable> & { value?: any }\r\n\r\nexport const BaseItemGroup = mixins(\r\n  Proxyable,\r\n  Themeable\r\n).extend({\r\n  name: 'base-item-group',\r\n\r\n  props: {\r\n    activeClass: {\r\n      type: String,\r\n      default: 'v-item--active'\r\n    },\r\n    mandatory: Boolean,\r\n    max: {\r\n      type: [Number, String],\r\n      default: null\r\n    },\r\n    multiple: Boolean\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      // As long as a value is defined, show it\r\n      // Otherwise, check if multiple\r\n      // to determine which default to provide\r\n      internalLazyValue: this.value !== undefined\r\n        ? this.value\r\n        : this.multiple ? [] : undefined,\r\n      items: [] as GroupableInstance[]\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    classes (): Record<string, boolean> {\r\n      return {\r\n        ...this.themeClasses\r\n      }\r\n    },\r\n    selectedItems (): GroupableInstance[] {\r\n      return this.items.filter((item, index) => {\r\n        return this.toggleMethod(this.getValue(item, index))\r\n      })\r\n    },\r\n    selectedValues (): any[] {\r\n      return Array.isArray(this.internalValue)\r\n        ? this.internalValue\r\n        : [this.internalValue]\r\n    },\r\n    toggleMethod (): (v: any) => boolean {\r\n      if (!this.multiple) {\r\n        return (v: any) => this.internalValue === v\r\n      }\r\n\r\n      const internalValue = this.internalValue\r\n      if (Array.isArray(internalValue)) {\r\n        return (v: any) => internalValue.includes(v)\r\n      }\r\n\r\n      return () => false\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    internalValue () {\r\n      // https://github.com/vuetifyjs/vuetify/issues/5352\r\n      this.$nextTick(this.updateItemsState)\r\n    }\r\n  },\r\n\r\n  created () {\r\n    if (this.multiple && !Array.isArray(this.internalValue)) {\r\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getValue (item: GroupableInstance, i: number): unknown {\r\n      return item.value == null || item.value === ''\r\n        ? i\r\n        : item.value\r\n    },\r\n    onClick (item: GroupableInstance, index: number) {\r\n      this.updateInternalValue(\r\n        this.getValue(item, index)\r\n      )\r\n    },\r\n    register (item: GroupableInstance) {\r\n      const index = this.items.push(item) - 1\r\n\r\n      item.$on('change', () => this.onClick(item, index))\r\n\r\n      // If no value provided and mandatory,\r\n      // assign first registered item\r\n      if (this.mandatory && this.internalLazyValue == null) {\r\n        this.updateMandatory()\r\n      }\r\n\r\n      this.updateItem(item, index)\r\n    },\r\n    unregister (item: GroupableInstance) {\r\n      if (this._isDestroyed) return\r\n\r\n      const index = this.items.indexOf(item)\r\n      const value = this.getValue(item, index)\r\n\r\n      this.items.splice(index, 1)\r\n\r\n      const valueIndex = this.selectedValues.indexOf(value)\r\n\r\n      // Items is not selected, do nothing\r\n      if (valueIndex < 0) return\r\n\r\n      // If not mandatory, use regular update process\r\n      if (!this.mandatory) {\r\n        return this.updateInternalValue(value)\r\n      }\r\n\r\n      // Remove the value\r\n      if (this.multiple && Array.isArray(this.internalValue)) {\r\n        this.internalValue = this.internalValue.filter(v => v !== value)\r\n      } else {\r\n        this.internalValue = undefined\r\n      }\r\n\r\n      // If mandatory and we have no selection\r\n      // add the last item as value\r\n      /* istanbul ignore else */\r\n      if (!this.selectedItems.length) {\r\n        this.updateMandatory(true)\r\n      }\r\n    },\r\n    updateItem (item: GroupableInstance, index: number) {\r\n      const value = this.getValue(item, index)\r\n\r\n      item.isActive = this.toggleMethod(value)\r\n    },\r\n    updateItemsState () {\r\n      if (this.mandatory &&\r\n        !this.selectedItems.length\r\n      ) {\r\n        return this.updateMandatory()\r\n      }\r\n\r\n      // TODO: Make this smarter so it\r\n      // doesn't have to iterate every\r\n      // child in an update\r\n      this.items.forEach(this.updateItem)\r\n    },\r\n    updateInternalValue (value: any) {\r\n      this.multiple\r\n        ? this.updateMultiple(value)\r\n        : this.updateSingle(value)\r\n    },\r\n    updateMandatory (last?: boolean) {\r\n      if (!this.items.length) return\r\n\r\n      const index = last ? this.items.length - 1 : 0\r\n\r\n      this.updateInternalValue(\r\n        this.getValue(this.items[index], index)\r\n      )\r\n    },\r\n    updateMultiple (value: any) {\r\n      const defaultValue = Array.isArray(this.internalValue)\r\n        ? this.internalValue\r\n        : []\r\n      const internalValue = defaultValue.slice()\r\n      const index = internalValue.findIndex(val => val === value)\r\n\r\n      if (\r\n        this.mandatory &&\r\n        // Item already exists\r\n        index > -1 &&\r\n        // value would be reduced below min\r\n        internalValue.length - 1 < 1\r\n      ) return\r\n\r\n      if (\r\n        // Max is set\r\n        this.max != null &&\r\n        // Item doesn't exist\r\n        index < 0 &&\r\n        // value would be increased above max\r\n        internalValue.length + 1 > this.max\r\n      ) return\r\n\r\n      index > -1\r\n        ? internalValue.splice(index, 1)\r\n        : internalValue.push(value)\r\n\r\n      this.internalValue = internalValue\r\n    },\r\n    updateSingle (value: any) {\r\n      const isSame = value === this.internalValue\r\n\r\n      if (this.mandatory && isSame) return\r\n\r\n      this.internalValue = isSame ? undefined : value\r\n    }\r\n  },\r\n\r\n  render (h): VNode {\r\n    return h('div', {\r\n      staticClass: 'v-item-group',\r\n      class: this.classes\r\n    }, this.$slots.default)\r\n  }\r\n})\r\n\r\nexport default BaseItemGroup.extend({\r\n  name: 'v-item-group',\r\n\r\n  provide (): object {\r\n    return {\r\n      itemGroup: this\r\n    }\r\n  }\r\n})\r\n"],"sourceRoot":""}