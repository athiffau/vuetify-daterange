{"version":3,"sources":["../../../src/components/VIcon/VIcon.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_icons.styl'\r\n// Mixins\r\nimport Colorable from '../../mixins/colorable'\r\nimport Sizeable from '../../mixins/sizeable'\r\nimport Themeable from '../../mixins/themeable'\r\n// Util\r\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\r\n// Types\r\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\r\nimport mixins from '../../util/mixins'\r\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify'\r\n\r\nenum SIZE_MAP {\r\n  small = '16px',\r\n  default = '24px',\r\n  medium = '28px',\r\n  large = '36px',\r\n  xLarge = '40px'\r\n}\r\n\r\nfunction isFontAwesome5 (iconType: string): boolean {\r\n  return ['fas', 'far', 'fal', 'fab'].some(val => iconType.includes(val))\r\n}\r\n\r\nconst VIcon = mixins(\r\n  Colorable,\r\n  Sizeable,\r\n  Themeable\r\n  /* @vue/component */\r\n).extend({\r\n  name: 'v-icon',\r\n\r\n  props: {\r\n    disabled: Boolean,\r\n    left: Boolean,\r\n    right: Boolean\r\n  },\r\n\r\n  methods: {\r\n    getIcon (): VuetifyIcon {\r\n      let iconName = ''\r\n      if (this.$slots.default) iconName = this.$slots.default[0].text!\r\n\r\n      return remapInternalIcon(this, iconName)\r\n    },\r\n    getSize (): string | undefined {\r\n      const sizes = {\r\n        small: this.small,\r\n        medium: this.medium,\r\n        large: this.large,\r\n        xLarge: this.xLarge\r\n      }\r\n\r\n      const explicitSize = keys(sizes).find(key => sizes[key])\r\n\r\n      return (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\r\n    },\r\n    // Component data for both font and svg icon.\r\n    getDefaultData (): VNodeData {\r\n      const data: VNodeData = {\r\n        staticClass: 'v-icon',\r\n        class: {\r\n          'v-icon--disabled': this.disabled,\r\n          'v-icon--left': this.left,\r\n          'v-icon--link': this.$listeners.click || this.$listeners['!click'],\r\n          'v-icon--right': this.right\r\n        },\r\n        attrs: {\r\n          'aria-hidden': true,\r\n          ...this.$attrs\r\n        },\r\n        on: this.$listeners\r\n      }\r\n\r\n      return data\r\n    },\r\n    applyColors (data: VNodeData): void {\r\n      data.class = { ...data.class, ...this.themeClasses }\r\n      this.setTextColor(this.color, data)\r\n    },\r\n    renderFontIcon (icon: string, h: CreateElement): VNode {\r\n      const newChildren: VNodeChildren = []\r\n      const data = this.getDefaultData()\r\n\r\n      let iconType = 'material-icons'\r\n      // Material Icon delimiter is _\r\n      // https://material.io/icons/\r\n      const delimiterIndex = icon.indexOf('-')\r\n      const isMaterialIcon = delimiterIndex <= -1\r\n\r\n      if (isMaterialIcon) {\r\n        // Material icon uses ligatures.\r\n        newChildren.push(icon)\r\n      } else {\r\n        iconType = icon.slice(0, delimiterIndex)\r\n        if (isFontAwesome5(iconType)) iconType = ''\r\n      }\r\n\r\n      data.class[iconType] = true\r\n      data.class[icon] = !isMaterialIcon\r\n\r\n      const fontSize = this.getSize()\r\n      if (fontSize) data.style = { fontSize }\r\n\r\n      this.applyColors(data)\r\n\r\n      return h('i', data, newChildren)\r\n    },\r\n    renderSvgIcon (icon: VuetifyIconComponent, h: CreateElement): VNode {\r\n      const data = this.getDefaultData()\r\n      data.class['v-icon--is-component'] = true\r\n\r\n      const size = this.getSize()\r\n      if (size) {\r\n        data.style = {\r\n          fontSize: size,\r\n          height: size\r\n        }\r\n      }\r\n\r\n      this.applyColors(data)\r\n\r\n      const component = icon.component\r\n      data.props = icon.props\r\n      return h(component, data)\r\n    }\r\n  },\r\n\r\n  render (h: CreateElement): VNode {\r\n    const icon = this.getIcon()\r\n\r\n    if (typeof icon === 'string') {\r\n      return this.renderFontIcon(icon, h)\r\n    }\r\n\r\n    return this.renderSvgIcon(icon, h)\r\n  }\r\n})\r\n\r\nexport default Vue.extend({\r\n  name: 'v-icon',\r\n\r\n  $_wrapperFor: VIcon,\r\n\r\n  functional: true,\r\n\r\n  render (h, { data, children }): VNode {\r\n    let iconName = ''\r\n\r\n    // Support usage of v-text and v-html\r\n    if (data.domProps) {\r\n      iconName = data.domProps.textContent ||\r\n        data.domProps.innerHTML ||\r\n        iconName\r\n\r\n      // Remove nodes so it doesn't\r\n      // overwrite our changes\r\n      delete data.domProps.textContent\r\n      delete data.domProps.innerHTML\r\n    }\r\n\r\n    return h(VIcon, data, iconName ? [iconName] : children)\r\n  }\r\n})\r\n"],"sourceRoot":""}