{"version":3,"sources":["../../../../src/components/VDatePicker/util/createNativeLocaleFormatter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAoBA,SAAS,2BAAT,CACE,MADF,EAEE,OAFF,EAGwD;AAAA,QAAtD,aAAsD,uEAAvB,EAAE,OAAO,CAAT,EAAY,QAAQ,CAApB,EAAuB;;AAEtD,QAAM,gBAAgB,SAAhB,aAAgB,CAAC,UAAD,EAAuB;AAAA,oCACf,WAAW,IAAX,GAAkB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC,KAAhC,CAAsC,GAAtC,CADe;AAAA;AAAA,YACpC,IADoC;AAAA,YAC9B,KAD8B;AAAA,YACvB,IADuB;;AAE3C,eAAO,CAAC,mBAAI,IAAJ,EAAU,CAAV,CAAD,EAAe,mBAAI,SAAS,CAAb,CAAf,EAAgC,mBAAI,QAAQ,CAAZ,CAAhC,EAAgD,IAAhD,CAAqD,GAArD,CAAP;AACD,KAHD;AAKA,QAAI;AACF,YAAM,gBAAgB,IAAI,KAAK,cAAT,CAAwB,UAAU,SAAlC,EAA6C,OAA7C,CAAtB;AACA,eAAO,UAAC,UAAD;AAAA,mBAAwB,cAAc,MAAd,CAAqB,IAAI,IAAJ,CAAY,cAAc,UAAd,CAAZ,qBAArB,CAAxB;AAAA,SAAP;AACD,KAHD,CAGE,OAAO,CAAP,EAAU;AACV,eAAQ,cAAc,KAAd,IAAuB,cAAc,MAAtC,GACH,UAAC,UAAD;AAAA,mBAAwB,cAAc,UAAd,EAA0B,MAA1B,CAAiC,cAAc,KAAd,IAAuB,CAAxD,EAA2D,cAAc,MAAzE,CAAxB;AAAA,SADG,GAEH,SAFJ;AAGD;AACF;kBAEc,2B","sourcesContent":["import pad from './pad'\r\n\r\ninterface SubstrOptions {\r\n  start?: number\r\n  length: number\r\n}\r\n\r\nexport type DatePickerFormatter = (date: string) => string\r\n\r\nfunction createNativeLocaleFormatter (\r\n  local: string | undefined,\r\n  options: Intl.DateTimeFormatOptions\r\n): DatePickerFormatter | undefined\r\n\r\nfunction createNativeLocaleFormatter (\r\n  local: string | undefined,\r\n  options: Intl.DateTimeFormatOptions,\r\n  substrOptions: SubstrOptions\r\n): DatePickerFormatter\r\n\r\nfunction createNativeLocaleFormatter (\r\n  locale: string | undefined,\r\n  options: Intl.DateTimeFormatOptions,\r\n  substrOptions: SubstrOptions = { start: 0, length: 0 }\r\n): DatePickerFormatter | undefined {\r\n  const makeIsoString = (dateString: string) => {\r\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\r\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-')\r\n  }\r\n\r\n  try {\r\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\r\n    return (dateString: string) => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\r\n  } catch (e) {\r\n    return (substrOptions.start || substrOptions.length)\r\n      ? (dateString: string) => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length)\r\n      : undefined\r\n  }\r\n}\r\n\r\nexport default createNativeLocaleFormatter\r\n"],"sourceRoot":""}