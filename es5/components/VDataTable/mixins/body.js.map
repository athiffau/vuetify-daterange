{"version":3,"sources":["../../../../src/components/VDataTable/mixins/body.js"],"names":[],"mappings":";;;;;;;;;;AAEA;;;;AAEA;kBACe;AACb,aAAS;AACP,gBADO,sBACC;AACN,gBAAM,WAAW,KAAK,QAAL,EAAjB;AAEA,mBAAO,KAAK,cAAL,CAAoB,OAApB,EAA6B,QAA7B,CAAP;AACD,SALM;AAMP,sBANO,0BAMS,KANT,EAMc;AACnB,gBAAM,WAAW,EAAjB;AAEA,gBAAI,KAAK,UAAL,CAAgB,MAAM,IAAtB,CAAJ,EAAiC;AAC/B,oBAAM,SAAS,KAAK,cAAL,CAAoB,KAApB,EAA2B;AACxC,2BAAO,6BADiC;AAExC,yBAAK,mCAAqB,MAAM,IAA3B,EAAiC,KAAK,OAAtC;AAFmC,iBAA3B,EAGZ,CAAC,KAAK,YAAL,CAAkB,MAAlB,CAAyB,KAAzB,CAAD,CAHY,CAAf;AAKA,yBAAS,IAAT,CAAc,MAAd;AACD;AAED,gBAAM,aAAa,KAAK,cAAL,CAAoB,kBAApB,EAAwC;AACzD,uBAAO,yBADkD;AAEzD,uBAAO,EAAE,SAAS,KAAK,aAAhB,EAFkD;AAGzD,uBAAO;AACL,yBAAK;AADA,iBAHkD;AAMzD,oBAAI,gCAA0B,mCAA1B;AANqD,aAAxC,EAOhB,QAPgB,CAAnB;AASA,mBAAO,KAAK,KAAL,CAAW,CAAC,UAAD,CAAX,EAAyB,EAAE,OAAO,yBAAT,EAAzB,CAAP;AACD,SA5BM;AA6BP,wBA7BO,8BA6BS;AACd,gBAAI,CAAC,KAAK,YAAL,CAAkB,KAAvB,EAA8B;AAC5B,uBAAO,IAAP;AACD;AAED,gBAAM,OAAO,EAAb;AACA,iBAAK,IAAI,QAAQ,CAAZ,EAAe,MAAM,KAAK,aAAL,CAAmB,MAA7C,EAAqD,QAAQ,GAA7D,EAAkE,EAAE,KAApE,EAA2E;AACzE,oBAAM,OAAO,KAAK,aAAL,CAAmB,KAAnB,CAAb;AACA,oBAAM,QAAQ,KAAK,WAAL,CAAiB,IAAjB,EAAuB,KAAvB,CAAd;AACA,oBAAM,MAAM,KAAK,YAAL,CAAkB,KAAlB,CAAwB,KAAxB,CAAZ;AAEA,qBAAK,IAAL,CAAU,KAAK,MAAL,CAAY,GAAZ,EAAiB,IAAjB,IACN,KAAK,KAAL,CAAW,GAAX,EAAgB;AAChB,yBAAK,KAAK,OAAL,GAAe,mCAAqB,MAAM,IAA3B,EAAiC,KAAK,OAAtC,CAAf,GAAgE,KADrD;AAEhB,2BAAO,EAAE,QAAQ,KAAK,UAAL,CAAgB,IAAhB,CAAV;AAFS,iBAAhB,CADM,GAKN,GALJ;AAOA,oBAAI,KAAK,YAAL,CAAkB,MAAtB,EAA8B;AAC5B,wBAAM,YAAY,KAAK,cAAL,CAAoB,KAApB,CAAlB;AACA,yBAAK,IAAL,CAAU,SAAV;AACD;AACF;AAED,mBAAO,IAAP;AACD,SAtDM;AAuDP,qBAvDO,yBAuDQ,OAvDR,EAuDe;AACpB,gBAAI,KAAK,MAAL,CAAY,OAAZ,EAAqB,IAArB,CAAJ,EAAgC;AAC9B,uBAAO,OAAP;AACD,aAFD,MAEO,IAAI,KAAK,MAAL,CAAY,OAAZ,EAAqB,IAArB,CAAJ,EAAgC;AACrC,uBAAO,KAAK,KAAL,CAAW,OAAX,CAAP;AACD,aAFM,MAEA;AACL,uBAAO,KAAK,KAAL,CAAW,CAAC,KAAK,cAAL,CAAoB,IAApB,EAA0B;AAC3C,2BAAO;AACL,0CAAkB,OAAO,OAAP,KAAmB;AADhC,qBADoC;AAI3C,2BAAO,EAAE,SAAS,KAAK,aAAhB;AAJoC,iBAA1B,EAKhB,OALgB,CAAD,CAAX,CAAP;AAMD;AACF;AApEM;AADI,C","sourcesContent":["import ExpandTransitionGenerator from '../../transitions/expand-transition'\r\n\r\nimport { getObjectValueByPath } from '../../../util/helpers'\r\n\r\n/* @vue/component */\r\nexport default {\r\n  methods: {\r\n    genTBody () {\r\n      const children = this.genItems()\r\n\r\n      return this.$createElement('tbody', children)\r\n    },\r\n    genExpandedRow (props) {\r\n      const children = []\r\n\r\n      if (this.isExpanded(props.item)) {\r\n        const expand = this.$createElement('div', {\r\n          class: 'v-datatable__expand-content',\r\n          key: getObjectValueByPath(props.item, this.itemKey)\r\n        }, [this.$scopedSlots.expand(props)])\r\n\r\n        children.push(expand)\r\n      }\r\n\r\n      const transition = this.$createElement('transition-group', {\r\n        class: 'v-datatable__expand-col',\r\n        attrs: { colspan: this.headerColumns },\r\n        props: {\r\n          tag: 'td'\r\n        },\r\n        on: ExpandTransitionGenerator('v-datatable__expand-col--expanded')\r\n      }, children)\r\n\r\n      return this.genTR([transition], { class: 'v-datatable__expand-row' })\r\n    },\r\n    genFilteredItems () {\r\n      if (!this.$scopedSlots.items) {\r\n        return null\r\n      }\r\n\r\n      const rows = []\r\n      for (let index = 0, len = this.filteredItems.length; index < len; ++index) {\r\n        const item = this.filteredItems[index]\r\n        const props = this.createProps(item, index)\r\n        const row = this.$scopedSlots.items(props)\r\n\r\n        rows.push(this.hasTag(row, 'td')\r\n          ? this.genTR(row, {\r\n            key: this.itemKey ? getObjectValueByPath(props.item, this.itemKey) : index,\r\n            attrs: { active: this.isSelected(item) }\r\n          })\r\n          : row)\r\n\r\n        if (this.$scopedSlots.expand) {\r\n          const expandRow = this.genExpandedRow(props)\r\n          rows.push(expandRow)\r\n        }\r\n      }\r\n\r\n      return rows\r\n    },\r\n    genEmptyItems (content) {\r\n      if (this.hasTag(content, 'tr')) {\r\n        return content\r\n      } else if (this.hasTag(content, 'td')) {\r\n        return this.genTR(content)\r\n      } else {\r\n        return this.genTR([this.$createElement('td', {\r\n          class: {\r\n            'text-xs-center': typeof content === 'string'\r\n          },\r\n          attrs: { colspan: this.headerColumns }\r\n        }, content)])\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}