{"version":3,"sources":["../../../src/components/VForm/VForm.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\r\nimport '../../stylus/components/_forms.styl'\r\n\r\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\r\n\r\n/* @vue/component */\r\nexport default {\r\n  name: 'v-form',\r\n\r\n  mixins: [RegistrableProvide('form')],\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    value: Boolean,\r\n    lazyValidation: Boolean\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      inputs: [],\r\n      watchers: [],\r\n      errorBag: {}\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    errorBag: {\r\n      handler () {\r\n        const errors = Object.values(this.errorBag).includes(true)\r\n        this.$emit('input', !errors)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    watchInput (input) {\r\n      const watcher = input => {\r\n        return input.$watch('hasError', val => {\r\n          this.$set(this.errorBag, input._uid, val)\r\n        }, { immediate: true })\r\n      }\r\n\r\n      const watchers = {\r\n        _uid: input._uid,\r\n        valid: undefined,\r\n        shouldValidate: undefined\r\n      }\r\n\r\n      if (this.lazyValidation) {\r\n        // Only start watching inputs if we need to\r\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\r\n          if (!val) return\r\n\r\n          // Only watch if we're not already doing it\r\n          if (this.errorBag.hasOwnProperty(input._uid)) return\r\n\r\n          watchers.valid = watcher(input)\r\n        })\r\n      } else {\r\n        watchers.valid = watcher(input)\r\n      }\r\n\r\n      return watchers\r\n    },\r\n    /** @public */\r\n    validate () {\r\n      const errors = this.inputs.filter(input => !input.validate(true)).length\r\n      return !errors\r\n    },\r\n    /** @public */\r\n    reset () {\r\n      for (let i = this.inputs.length; i--;) {\r\n        this.inputs[i].reset()\r\n      }\r\n      if (this.lazyValidation) {\r\n        // Account for timeout in validatable\r\n        setTimeout(() => {\r\n          this.errorBag = {}\r\n        }, 0)\r\n      }\r\n    },\r\n    /** @public */\r\n    resetValidation () {\r\n      for (let i = this.inputs.length; i--;) {\r\n        this.inputs[i].resetValidation()\r\n      }\r\n      if (this.lazyValidation) {\r\n        // Account for timeout in validatable\r\n        setTimeout(() => {\r\n          this.errorBag = {}\r\n        }, 0)\r\n      }\r\n    },\r\n    register (input) {\r\n      const unwatch = this.watchInput(input)\r\n      this.inputs.push(input)\r\n      this.watchers.push(unwatch)\r\n    },\r\n    unregister (input) {\r\n      const found = this.inputs.find(i => i._uid === input._uid)\r\n\r\n      if (!found) return\r\n\r\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\r\n      unwatch.valid && unwatch.valid()\r\n      unwatch.shouldValidate && unwatch.shouldValidate()\r\n\r\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\r\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\r\n      this.$delete(this.errorBag, found._uid)\r\n    }\r\n  },\r\n\r\n  render (h) {\r\n    return h('form', {\r\n      staticClass: 'v-form',\r\n      attrs: Object.assign({\r\n        novalidate: true\r\n      }, this.$attrs),\r\n      on: {\r\n        submit: e => this.$emit('submit', e)\r\n      }\r\n    }, this.$slots.default)\r\n  }\r\n}\r\n"],"sourceRoot":""}