// Mixins
import mixins from '../../../util/mixins';
import Themeable from '../../../mixins/themeable';
import Colorable from '../../../mixins/colorable';
import Times from './times';
import Mouse from './mouse';
// Util
import props from '../util/props';
import { parseTimestamp, getWeekdaySkips, createDayList, createNativeLocaleFormatter, getStartOfWeek, getEndOfWeek } from '../util/timestamp';
/* @vue/component */
export default mixins(Colorable, Themeable, Times, Mouse).extend({
    name: 'calendar-base',
    props: props.base,
    computed: {
        weekdaySkips() {
            return getWeekdaySkips(this.weekdays);
        },
        parsedStart() {
            return parseTimestamp(this.start);
        },
        parsedEnd() {
            return parseTimestamp(this.end);
        },
        days() {
            return createDayList(this.parsedStart, this.parsedEnd, this.times.today, this.weekdaySkips);
        },
        dayFormatter() {
            if (this.dayFormat) {
                return this.dayFormat;
            }
            const options = { timeZone: 'UTC', day: 'numeric' };
            return createNativeLocaleFormatter(this.locale, (_tms, _short) => options);
        },
        weekdayFormatter() {
            if (this.weekdayFormat) {
                return this.weekdayFormat;
            }
            const longOptions = { timeZone: 'UTC', weekday: 'long' };
            const shortOptions = { timeZone: 'UTC', weekday: 'short' };
            return createNativeLocaleFormatter(this.locale, (_tms, short) => short ? shortOptions : longOptions);
        }
    },
    methods: {
        getRelativeClasses(timestamp, outside = false) {
            return {
                'v-present': timestamp.present,
                'v-past': timestamp.past,
                'v-future': timestamp.future,
                'v-outside': outside
            };
        },
        getStartOfWeek(timestamp) {
            return getStartOfWeek(timestamp, this.weekdays, this.times.today);
        },
        getEndOfWeek(timestamp) {
            return getEndOfWeek(timestamp, this.weekdays, this.times.today);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxTQUFTO0FBQ1QsT0FBTyxNQUFNLE1BQU0sc0JBQXNCLENBQUE7QUFDekMsT0FBTyxTQUFTLE1BQU0sMkJBQTJCLENBQUE7QUFDakQsT0FBTyxTQUFTLE1BQU0sMkJBQTJCLENBQUE7QUFDakQsT0FBTyxLQUFLLE1BQU0sU0FBUyxDQUFBO0FBQzNCLE9BQU8sS0FBSyxNQUFNLFNBQVMsQ0FBQTtBQUUzQixPQUFPO0FBQ1AsT0FBTyxLQUFLLE1BQU0sZUFBZSxDQUFBO0FBQ2pDLE9BQU8sRUFHTCxjQUFjLEVBQ2QsZUFBZSxFQUNmLGFBQWEsRUFDYiwyQkFBMkIsRUFDM0IsY0FBYyxFQUNkLFlBQVksRUFDYixNQUFNLG1CQUFtQixDQUFBO0FBRTFCLG9CQUFvQjtBQUNwQixlQUFlLE1BQU0sQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDL0QsSUFBSSxFQUFFLGVBQWU7SUFFckIsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJO0lBRWpCLFFBQVEsRUFBRTtRQUNSLFlBQVk7WUFDVixPQUFPLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDdkMsQ0FBQztRQUNELFdBQVc7WUFDVCxPQUFPLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFlLENBQUE7UUFDakQsQ0FBQztRQUNELFNBQVM7WUFDUCxPQUFPLGNBQWMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFlLENBQUE7UUFDL0MsQ0FBQztRQUNELElBQUk7WUFDRixPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLFdBQVcsRUFDaEIsSUFBSSxDQUFDLFNBQVMsRUFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFDaEIsSUFBSSxDQUFDLFlBQVksQ0FDbEIsQ0FBQTtRQUNILENBQUM7UUFDRCxZQUFZO1lBQ1YsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNsQixPQUFPLElBQUksQ0FBQyxTQUFnQyxDQUFBO2FBQzdDO1lBRUQsTUFBTSxPQUFPLEdBQUcsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsQ0FBQTtZQUVuRCxPQUFPLDJCQUEyQixDQUNoQyxJQUFJLENBQUMsTUFBTSxFQUNYLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUMxQixDQUFBO1FBQ0gsQ0FBQztRQUNELGdCQUFnQjtZQUNkLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtnQkFDdEIsT0FBTyxJQUFJLENBQUMsYUFBb0MsQ0FBQTthQUNqRDtZQUVELE1BQU0sV0FBVyxHQUFHLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUE7WUFDeEQsTUFBTSxZQUFZLEdBQUcsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQTtZQUUxRCxPQUFPLDJCQUEyQixDQUNoQyxJQUFJLENBQUMsTUFBTSxFQUNYLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FDcEQsQ0FBQTtRQUNILENBQUM7S0FDRjtJQUVELE9BQU8sRUFBRTtRQUNQLGtCQUFrQixDQUFFLFNBQXFCLEVBQUUsT0FBTyxHQUFHLEtBQUs7WUFDeEQsT0FBTztnQkFDTCxXQUFXLEVBQUUsU0FBUyxDQUFDLE9BQU87Z0JBQzlCLFFBQVEsRUFBRSxTQUFTLENBQUMsSUFBSTtnQkFDeEIsVUFBVSxFQUFFLFNBQVMsQ0FBQyxNQUFNO2dCQUM1QixXQUFXLEVBQUUsT0FBTzthQUNyQixDQUFBO1FBQ0gsQ0FBQztRQUNELGNBQWMsQ0FBRSxTQUFxQjtZQUNuQyxPQUFPLGNBQWMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ25FLENBQUM7UUFDRCxZQUFZLENBQUUsU0FBcUI7WUFDakMsT0FBTyxZQUFZLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNqRSxDQUFDO0tBQ0Y7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gTWl4aW5zXHJcbmltcG9ydCBtaXhpbnMgZnJvbSAnLi4vLi4vLi4vdXRpbC9taXhpbnMnXHJcbmltcG9ydCBUaGVtZWFibGUgZnJvbSAnLi4vLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSdcclxuaW1wb3J0IENvbG9yYWJsZSBmcm9tICcuLi8uLi8uLi9taXhpbnMvY29sb3JhYmxlJ1xyXG5pbXBvcnQgVGltZXMgZnJvbSAnLi90aW1lcydcclxuaW1wb3J0IE1vdXNlIGZyb20gJy4vbW91c2UnXHJcblxyXG4vLyBVdGlsXHJcbmltcG9ydCBwcm9wcyBmcm9tICcuLi91dGlsL3Byb3BzJ1xyXG5pbXBvcnQge1xyXG4gIFZUaW1lc3RhbXAsXHJcbiAgVlRpbWVzdGFtcEZvcm1hdHRlcixcclxuICBwYXJzZVRpbWVzdGFtcCxcclxuICBnZXRXZWVrZGF5U2tpcHMsXHJcbiAgY3JlYXRlRGF5TGlzdCxcclxuICBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIsXHJcbiAgZ2V0U3RhcnRPZldlZWssXHJcbiAgZ2V0RW5kT2ZXZWVrXHJcbn0gZnJvbSAnLi4vdXRpbC90aW1lc3RhbXAnXHJcblxyXG4vKiBAdnVlL2NvbXBvbmVudCAqL1xyXG5leHBvcnQgZGVmYXVsdCBtaXhpbnMoQ29sb3JhYmxlLCBUaGVtZWFibGUsIFRpbWVzLCBNb3VzZSkuZXh0ZW5kKHtcclxuICBuYW1lOiAnY2FsZW5kYXItYmFzZScsXHJcblxyXG4gIHByb3BzOiBwcm9wcy5iYXNlLFxyXG5cclxuICBjb21wdXRlZDoge1xyXG4gICAgd2Vla2RheVNraXBzICgpOiBudW1iZXJbXSB7XHJcbiAgICAgIHJldHVybiBnZXRXZWVrZGF5U2tpcHModGhpcy53ZWVrZGF5cylcclxuICAgIH0sXHJcbiAgICBwYXJzZWRTdGFydCAoKTogVlRpbWVzdGFtcCB7XHJcbiAgICAgIHJldHVybiBwYXJzZVRpbWVzdGFtcCh0aGlzLnN0YXJ0KSBhcyBWVGltZXN0YW1wXHJcbiAgICB9LFxyXG4gICAgcGFyc2VkRW5kICgpOiBWVGltZXN0YW1wIHtcclxuICAgICAgcmV0dXJuIHBhcnNlVGltZXN0YW1wKHRoaXMuZW5kKSBhcyBWVGltZXN0YW1wXHJcbiAgICB9LFxyXG4gICAgZGF5cyAoKTogVlRpbWVzdGFtcFtdIHtcclxuICAgICAgcmV0dXJuIGNyZWF0ZURheUxpc3QoXHJcbiAgICAgICAgdGhpcy5wYXJzZWRTdGFydCxcclxuICAgICAgICB0aGlzLnBhcnNlZEVuZCxcclxuICAgICAgICB0aGlzLnRpbWVzLnRvZGF5LFxyXG4gICAgICAgIHRoaXMud2Vla2RheVNraXBzXHJcbiAgICAgIClcclxuICAgIH0sXHJcbiAgICBkYXlGb3JtYXR0ZXIgKCk6IFZUaW1lc3RhbXBGb3JtYXR0ZXIge1xyXG4gICAgICBpZiAodGhpcy5kYXlGb3JtYXQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kYXlGb3JtYXQgYXMgVlRpbWVzdGFtcEZvcm1hdHRlclxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBvcHRpb25zID0geyB0aW1lWm9uZTogJ1VUQycsIGRheTogJ251bWVyaWMnIH1cclxuXHJcbiAgICAgIHJldHVybiBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIoXHJcbiAgICAgICAgdGhpcy5sb2NhbGUsXHJcbiAgICAgICAgKF90bXMsIF9zaG9ydCkgPT4gb3B0aW9uc1xyXG4gICAgICApXHJcbiAgICB9LFxyXG4gICAgd2Vla2RheUZvcm1hdHRlciAoKTogVlRpbWVzdGFtcEZvcm1hdHRlciB7XHJcbiAgICAgIGlmICh0aGlzLndlZWtkYXlGb3JtYXQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy53ZWVrZGF5Rm9ybWF0IGFzIFZUaW1lc3RhbXBGb3JtYXR0ZXJcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgbG9uZ09wdGlvbnMgPSB7IHRpbWVab25lOiAnVVRDJywgd2Vla2RheTogJ2xvbmcnIH1cclxuICAgICAgY29uc3Qgc2hvcnRPcHRpb25zID0geyB0aW1lWm9uZTogJ1VUQycsIHdlZWtkYXk6ICdzaG9ydCcgfVxyXG5cclxuICAgICAgcmV0dXJuIGNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcihcclxuICAgICAgICB0aGlzLmxvY2FsZSxcclxuICAgICAgICAoX3Rtcywgc2hvcnQpID0+IHNob3J0ID8gc2hvcnRPcHRpb25zIDogbG9uZ09wdGlvbnNcclxuICAgICAgKVxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIG1ldGhvZHM6IHtcclxuICAgIGdldFJlbGF0aXZlQ2xhc3NlcyAodGltZXN0YW1wOiBWVGltZXN0YW1wLCBvdXRzaWRlID0gZmFsc2UpOiBvYmplY3Qge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgICd2LXByZXNlbnQnOiB0aW1lc3RhbXAucHJlc2VudCxcclxuICAgICAgICAndi1wYXN0JzogdGltZXN0YW1wLnBhc3QsXHJcbiAgICAgICAgJ3YtZnV0dXJlJzogdGltZXN0YW1wLmZ1dHVyZSxcclxuICAgICAgICAndi1vdXRzaWRlJzogb3V0c2lkZVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2V0U3RhcnRPZldlZWsgKHRpbWVzdGFtcDogVlRpbWVzdGFtcCk6IFZUaW1lc3RhbXAge1xyXG4gICAgICByZXR1cm4gZ2V0U3RhcnRPZldlZWsodGltZXN0YW1wLCB0aGlzLndlZWtkYXlzLCB0aGlzLnRpbWVzLnRvZGF5KVxyXG4gICAgfSxcclxuICAgIGdldEVuZE9mV2VlayAodGltZXN0YW1wOiBWVGltZXN0YW1wKTogVlRpbWVzdGFtcCB7XHJcbiAgICAgIHJldHVybiBnZXRFbmRPZldlZWsodGltZXN0YW1wLCB0aGlzLndlZWtkYXlzLCB0aGlzLnRpbWVzLnRvZGF5KVxyXG4gICAgfVxyXG4gIH1cclxufSlcclxuIl19