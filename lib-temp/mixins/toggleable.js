import Vue from 'vue';
export function factory(prop = 'value', event = 'input') {
    return Vue.extend({
        name: 'toggleable',
        model: { prop, event },
        props: {
            [prop]: { required: false }
        },
        data() {
            return {
                isActive: !!this[prop]
            };
        },
        watch: {
            [prop](val) {
                this.isActive = !!val;
            },
            isActive(val) {
                !!val !== this[prop] && this.$emit(event, val);
            }
        }
    });
}
/* eslint-disable-next-line no-redeclare */
const Toggleable = factory();
export default Toggleable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQXVCLE1BQU0sS0FBSyxDQUFBO0FBTXpDLE1BQU0sVUFBVSxPQUFPLENBQUUsSUFBSSxHQUFHLE9BQU8sRUFBRSxLQUFLLEdBQUcsT0FBTztJQUN0RCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDaEIsSUFBSSxFQUFFLFlBQVk7UUFFbEIsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRTtRQUV0QixLQUFLLEVBQUU7WUFDTCxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRTtTQUM1QjtRQUVELElBQUk7WUFDRixPQUFPO2dCQUNMLFFBQVEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzthQUN2QixDQUFBO1FBQ0gsQ0FBQztRQUVELEtBQUssRUFBRTtZQUNMLENBQUMsSUFBSSxDQUFDLENBQUUsR0FBRztnQkFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUE7WUFDdkIsQ0FBQztZQUNELFFBQVEsQ0FBRSxHQUFHO2dCQUNYLENBQUMsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFBO1lBQ2hELENBQUM7U0FDRjtLQUNGLENBQUMsQ0FBQTtBQUNKLENBQUM7QUFFRCwyQ0FBMkM7QUFDM0MsTUFBTSxVQUFVLEdBQUcsT0FBTyxFQUFFLENBQUE7QUFFNUIsZUFBZSxVQUFVLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlLCB7IFZ1ZUNvbnN0cnVjdG9yIH0gZnJvbSAndnVlJ1xyXG5cclxuLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXHJcbmV4cG9ydCB0eXBlIFRvZ2dsZWFibGU8VCBleHRlbmRzIHN0cmluZyA9ICd2YWx1ZSc+ID0gVnVlQ29uc3RydWN0b3I8VnVlICYgeyBpc0FjdGl2ZTogYm9vbGVhbiB9ICYgUmVjb3JkPFQsIGFueT4+XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZmFjdG9yeTxUIGV4dGVuZHMgc3RyaW5nID0gJ3ZhbHVlJz4gKHByb3A/OiBULCBldmVudD86IHN0cmluZyk6IFRvZ2dsZWFibGU8VD5cclxuZXhwb3J0IGZ1bmN0aW9uIGZhY3RvcnkgKHByb3AgPSAndmFsdWUnLCBldmVudCA9ICdpbnB1dCcpIHtcclxuICByZXR1cm4gVnVlLmV4dGVuZCh7XHJcbiAgICBuYW1lOiAndG9nZ2xlYWJsZScsXHJcblxyXG4gICAgbW9kZWw6IHsgcHJvcCwgZXZlbnQgfSxcclxuXHJcbiAgICBwcm9wczoge1xyXG4gICAgICBbcHJvcF06IHsgcmVxdWlyZWQ6IGZhbHNlIH1cclxuICAgIH0sXHJcblxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgaXNBY3RpdmU6ICEhdGhpc1twcm9wXVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIHdhdGNoOiB7XHJcbiAgICAgIFtwcm9wXSAodmFsKSB7XHJcbiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9ICEhdmFsXHJcbiAgICAgIH0sXHJcbiAgICAgIGlzQWN0aXZlICh2YWwpIHtcclxuICAgICAgICAhIXZhbCAhPT0gdGhpc1twcm9wXSAmJiB0aGlzLiRlbWl0KGV2ZW50LCB2YWwpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KVxyXG59XHJcblxyXG4vKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVkZWNsYXJlICovXHJcbmNvbnN0IFRvZ2dsZWFibGUgPSBmYWN0b3J5KClcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRvZ2dsZWFibGVcclxuIl19